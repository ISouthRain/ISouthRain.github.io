<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Emacs - 标签 - ISouthRain</title>
        <link>http://isouthrain.github.io/tags/emacs/</link>
        <description>Emacs - 标签 - ISouthRain</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>isouthrain@gmail.com (ISouthRain)</managingEditor>
            <webMaster>isouthrain@gmail.com (ISouthRain)</webMaster><lastBuildDate>Sun, 03 Jul 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://isouthrain.github.io/tags/emacs/" rel="self" type="application/rss+xml" /><item>
    <title>像 Linux Emacs 一样使用 WSL Emacs</title>
    <link>http://isouthrain.github.io/2022-07-03-windowsemacsforwsl/</link>
    <pubDate>Sun, 03 Jul 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://isouthrain.github.io/2022-07-03-windowsemacsforwsl/</guid>
    <description><![CDATA[<h2 id="前言">前言</h2>
<p>由于 Windows 的某些原因使用 Emacs 总会那么的不方便或者不好用,</p>
<p>有的人是在 MSYS2 下使用, 但由于 MYSYS2 软件包不多, 还是差了点</p>
<p><strong>所以本文借助 Windows WSL 进行使用 Emacs 么, 像在 Linux 下使用, 目前体验基本与Linux下体验一致, 不过 EAF 不支持</strong></p>
<h2 id="效果">效果</h2>
<figure>
     
</figure>

<h2 id="安装-wsl-本文是使用-wsl2-ubuntu22-dot-04">安装 WSL, 本文是使用 WSL2 Ubuntu22.04</h2>
<ul>
<li>如果你想把 <strong>Ubuntu22.04</strong> 安装到自己指定盘符, 可以观看此文章
<a href="https://www.myfreax.com/installing-wsl-manually-on-non-system-drive/" target="_blank" rel="noopener noreffer">如何将WSL安装到其它驱动器或者文件夹中 | myfreax</a></li>
</ul>
<h3 id="启用-wsl-功能">启用 WSL 功能</h3>
<ol>
<li>Win + s 打开搜索, 输入 <strong>启用或关闭 Windows 功能</strong>, 并打开
</li>
<li>将红线两个功能打勾✔, 启用后重启电脑
</li>
<li>以 <strong>管理员权限</strong> 打开 Powershell, 设置默认为 wsl2
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-powershell" data-lang="powershell"><span class="n">wsl</span> <span class="p">-</span><span class="n">-set-default-version</span> <span class="n">2</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>安装 Ubuntu22.04, <strong>wsl.exe &ndash;install -d Ubuntu22.04</strong>
<ul>
<li>如果安装不成功, 请参考文章 <a href="https://www.myfreax.com/installing-wsl-manually-on-non-system-drive/" target="_blank" rel="noopener noreffer">如何将WSL安装到其它驱动器或者文件夹中 | myfreax</a></li>
</ul>
</li>
<li>运行 wsl, 直接在 Powershell 输入 wsl 运行</li>
</ol>
<h2 id="wsl-文件所在目录-wsl">WSL 文件所在目录 \\wsl$</h2>
<h2 id="自觉安装-emacs">自觉安装 Emacs</h2>
<h2 id="安装-gui-支持">安装 GUI 支持</h2>
<h3 id="下载并安装-mobaxterm">下载并安装 MobaXterm</h3>
<p><a href="https://mobaxterm.mobatek.net/download.html" target="_blank" rel="noopener noreffer">MobaXterm Xserver with SSH, telnet, RDP, VNC and X11 - Download</a></p>
<h3 id="配置-gui-支持">配置 GUI 支持</h3>
<ul>
<li>
<p>Ubuntu 下 编写 ~/.bashrc 或者 ~/.zshrc <strong>末尾处添加</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># ~/.bashrc 或者 ~/.zshrc 文件</span>
<span class="c1"># 获取 Windows WSL IP</span>
<span class="nv">host_ip</span><span class="o">=</span><span class="k">$(</span>cat /etc/resolv.conf <span class="p">|</span>grep <span class="s2">&#34;nameserver&#34;</span> <span class="p">|</span>cut -f <span class="m">2</span> -d <span class="s2">&#34; &#34;</span><span class="k">)</span>
<span class="c1"># 将 GUI 显示让 mobaxterm 显示代替</span>
<span class="nb">export</span> <span class="nv">DISPLAY</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$host_ip</span><span class="s2">:0&#34;</span>
<span class="c1"># 如果你要使用 windows 代理</span>
<span class="c1"># export ALL_PROXY=&#34;http://$host_ip:7890&#34;</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>打开 <strong>MobaXterm</strong>, 挂在后台, <strong>有颜色为启动</strong>
</p>
</li>
<li>
<p>刷新 shell, <strong>source ~/.zshrc</strong> 或者 <strong>source ~/.bashrc</strong></p>
</li>
<li>
<p>Ubuntu 启动 emacs 试试, 弹出的窗口一直点 <strong>是</strong> 即可</p>
</li>
</ul>
<h2 id="gui-配置">GUI 配置</h2>
<h3 id="mobaxterm-模糊解决-修改-dip"><strong>MobaXterm</strong> 模糊解决, 修改 DIP</h3>
<figure>
     
</figure>

<h3 id="ubuntu-emacs-字体补充">Ubuntu Emacs 字体补充</h3>
<ul>
<li>当你打开 emacs 时候会乱码之类的, 是因为缺少字体</li>
<li>将 <strong>C:\Windows\Fonts</strong> 目录下的字体全部复制到 <strong>\\wsl$\Ubuntu22.04\root\.local\share\fonts</strong></li>
</ul>
<h2 id="增强-emacs-美化">增强 emacs 美化</h2>
<ul>
<li>
<p>emasc 启动屏幕尺寸太小, 修改数字</p>
<p>(set-face-attribute &lsquo;default nil :height 150)</p>
</li>
<li>
<p>建议 emasc 安装以下包</p>
<ol>
<li>cnfonts 用来调整 emacs 字体大小</li>
<li>all-the-icons 为 emacs 提供 图标支持</li>
<li>emojfyi 为 emacs 提供 表情符号支持</li>
</ol>
</li>
</ul>
]]></description>
</item><item>
    <title>GnuPG(GPG) 加密</title>
    <link>http://isouthrain.github.io/2022-06-25-gpg/</link>
    <pubDate>Sat, 25 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://isouthrain.github.io/2022-06-25-gpg/</guid>
    <description><![CDATA[<h2 id="什么是-gnupg">什么是 GnuPG ?</h2>
<p>GPG 全名叫 <strong>GNU Privacy Guard</strong>, 是一个加密前端, 可以使用 <em>RSA 、ESCDA</em> 等算法去加密</p>
<h2 id="下载-gnupg">下载 GnuPG</h2>
<ul>
<li><a href="https://gnupg.org/" target="_blank" rel="noopener noreffer">GnuPG官网</a></li>
</ul>
<h2 id="获取密钥--windows-使用终端命令">获取密钥(Windows 使用终端命令)</h2>
<p><strong>请记住, 密钥绝不要给任何人</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">gpg --gen-key
</code></pre></td></tr></table>
</div>
</div><p><strong>默认选项即可</strong></p>
<h2 id="加密解密文件">加密解密文件</h2>
<ul>
<li>加密之前
<ul>
<li>加密分为两种
<ol>
<li>对称加密解密(双方只要输入对密码就可以查看和加密)</li>
<li>非对称加密解密(对方使用 <strong>你给的公钥加密</strong>, 只有使用 <strong>你自己的密钥</strong> 能解密查看)</li>
</ol>
</li>
</ul>
</li>
<li><a href="https://gist.github.com/jhjguxin/6037564" target="_blank" rel="noopener noreffer">详细解释</a></li>
</ul>
<h3 id="对称加密解密">对称加密解密</h3>
<ul>
<li>加密(输入两次相同密码)</li>
</ul>
<!--listend-->
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">gpg --symmetric filename
</code></pre></td></tr></table>
</div>
</div><ul>
<li>解密(输入配对密码, 与上面的密码相同)
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># 仅仅解密内容</span>
gpg -d filename.gpg
<span class="c1"># 解密并输出原文件</span>
gpg -o fileame -d filename.gpg
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
<h3 id="非对称加密解密--个人常用">非对称加密解密(个人常用)</h3>
<ul>
<li>加密
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># -r 表示 gpg 用户, 就刚才创建密钥的用户名</span>
gpg -e -r User filename
</code></pre></td></tr></table>
</div>
</div></li>
<li>解密
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># 仅仅解密内容</span>
gpg -d filename.gpg
<span class="c1"># 解密并输出原文件</span>
gpg -o fileame -d filename.gpg
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
<h2 id="导出--请不要将密钥发送给任何人-自己导出密钥保存就好">导出(请不要将密钥发送给任何人,自己导出密钥保存就好)</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">gpg -o filename.asc --export keyID
</code></pre></td></tr></table>
</div>
</div><h2 id="导入--个人使用导入密钥就好">导入(个人使用导入密钥就好)</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">gpg --imort filename.asc
</code></pre></td></tr></table>
</div>
</div><h2 id="faq">FAQ❓</h2>
<ol>
<li>
<p>是不是在我的电脑上，使用别人A的公钥加密了一个文件，而我没有别人A的密钥，我也无法读取查看。是吗？？</p>
<p>是的</p>
</li>
<li>
<p>是不是使用 非对称加密(不需要密码)，别人没有公钥和私钥就无法破解读取数据？</p>
<p>公钥大家都可以有，可以用来加密(比如在公共平台发一个只有你能解密的消息)但不可以用来解密。私钥只有你有，可以用来解密</p>
<p>也就是只有私钥才能查看数据？？在属于自己的机器，只需要导入私钥就好了，是吧(是的)</p>
</li>
<li>
<p>那现在的GPG加密在没有私钥的情况下有没有可能被破解？？</p>
<p>首先，GPG只是一个前端，背后用的一般是RSA。密钥位数够的话，你可以认为没有可能</p>
</li>
</ol>
<h2 id="emacs-使用-gpg">Emacs 使用 GPG</h2>
<ul>
<li><strong>只要后端正常使用 GPG, Emacs 打开 .gpg 文件会自动解密, 在编辑保存后自动解密</strong></li>
</ul>
<h3 id="org-mode-使用-gpg-加密">org-mode 使用 GPG 加密</h3>
<ul>
<li>配置 EPG(Emacs的一个包, 调用 GPG)
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-elisp" data-lang="elisp"><span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;org-crypt</span><span class="p">)</span>
<span class="p">(</span><span class="nv">org-crypt-use-before-save-magic</span><span class="p">)</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">org-tags-exclude-from-inheritance</span> <span class="o">&#39;</span><span class="p">(</span><span class="s">&#34;crypt&#34;</span><span class="p">))</span>
<span class="c1">;; GPG ID, 解密一个文件可以知道这个ID, 每个人都不同</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">org-crypt-key</span> <span class="s">&#34;0PVT4708DD97889B&#34;</span><span class="p">)</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">auto-save-default</span> <span class="no">nil</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
<!--listend-->
<ul>
<li>
<p>加密
在标题后面写上 :crypt: , 保存文件将会自动加密此标题内容</p>
<p><strong>注意</strong>: Windows 加密会乱码，导致无法解密org标题内容，谨慎使用(请不要在Windows使用Org加密)</p>
</li>
<li>
<p>解密
将 光标放在具有 :crypt: 标题上, 命令 org-decrypt-entry</p>
</li>
</ul>
]]></description>
</item><item>
    <title>Org-mode 使用 Org-protocol-capture-html 网页收集(Org-protocol 使用)</title>
    <link>http://isouthrain.github.io/2022-01-12-org-protocol-capture-html/</link>
    <pubDate>Wed, 12 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://isouthrain.github.io/2022-01-12-org-protocol-capture-html/</guid>
    <description><![CDATA[<h2 id="概述">概述</h2>
<p><strong>Notion</strong> 和 <strong>Obsidian</strong> 都有收集网页的功能, Org-mode 自然也有, Org-mode 是调用 Org-protocol 协议使用的, 而插件 <code>Org-protocol-capture-html</code> 是其中能使 <code>Org-protocol</code> 收集的网页更加美观和可视化</p>
<p>因为很多人都不会都不理解 <code>Org-protocol</code> 和怎么去使用, 以及<code>Org-protocol-capture-html</code>, 说得只是怎么用这个插件, 却没有说怎么配置, 所以才有了本教程.</p>
<h2 id="相关链接">相关链接</h2>
<ul>
<li><a href="https://github.com/alphapapa/org-protocol-capture-html" target="_blank" rel="noopener noreffer">Org-protocol-capture-html 官网</a></li>
<li><a href="https://orgmode.org/manual/Protocols.html" target="_blank" rel="noopener noreffer">Org-protocol 协议官网</a></li>
</ul>
<h3 id="效果如下">效果如下</h3>
<p><code>效果如下👇</code>
<video poster="效果动图"  width="360" height="240" controls>
<source src="/posts/Attachment/2022-01-12-Org-protocol-capture-html/2022-01-22-14-24-59.mkv" type="video/mp4">
</video></p>
<h1 id="安装-org-protocol-capture-html">安装 Org-protocol-capture-html</h1>
<p>这个插件是不需要配置, 直接安装此插件就可以调用</p>
<p><code>请自己按装此插件</code></p>
<ul>
<li>使用 use-package 安装</li>
<li>手动安装</li>
</ul>
<h2 id="配置-org-protocol-capture-html">配置 Org-protocol-capture-html</h2>
<p>此插件是调用 <code>org-capture</code> 功能, 请自觉检查如下配置</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Elisp" data-lang="Elisp"><span class="p">(</span><span class="nv">server-start</span><span class="p">)</span> <span class="c1">;; 如果你知道这意味着什么，可以不使用这句， 这句是为了能调用 emacsclientw</span>
<span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;org-protocol</span><span class="p">)</span>

<span class="p">(</span><span class="nb">use-package</span> <span class="nv">s</span><span class="p">)</span> <span class="c1">;;依赖</span>

<span class="c1">;; 安装 org-protocol-capture-html</span>
<span class="c1">;; 如果跟我的不同, 请将下面两行删除</span>
<span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">&#39;load-path</span> <span class="s">&#34;~/.emacs.d/plugins/org-protocol-capture-html/&#34;</span><span class="p">)</span> <span class="c1">;;</span>
<span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;org-protocol-capture-html</span><span class="p">)</span>

<span class="p">(</span><span class="nb">setq</span> <span class="nv">org-capture-templates</span>
      <span class="o">&#39;</span><span class="p">(</span>
	 <span class="c1">;;Org-protocol网页收集, 按键 w 调用</span>
	 <span class="p">(</span><span class="s">&#34;w&#34;</span> <span class="s">&#34;网页收集&#34;</span> <span class="nv">entry</span> <span class="p">(</span><span class="nv">file</span> <span class="s">&#34;~/Org/网页收集.org&#34;</span><span class="p">)</span>
	 <span class="s">&#34;* [[%:link][%:description]] \n %U \n %:initial \n&#34;</span><span class="p">)</span>
	<span class="p">))</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="系统安装-org-protocol">系统安装 org-protocol</h2>
<p><code>如果下面的方法无法安装, 请见官网 👇</code></p>
<ul>
<li><a href="https://orgmode.org/worg/org-contrib/org-protocol.html" target="_blank" rel="noopener noreffer">官网安装 org-protocol 教程</a></li>
</ul>
<h3 id="windows-用户">Windows 用户👇</h3>
<ul>
<li>桌面新建 <code>org-protocol.reg</code> 文件, 使用 记事本 软件打开 , 并将以下👇代码放进去并保存, 然后运行安装并给权限</li>
<li><code>请把下面的 emacsclientw.exe 路径换成你自己的路径</code></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">REGEDIT4

[HKEY_CLASSES_ROOT\org-protocol]
@=&#34;URL:Org Protocol&#34;
&#34;URL Protocol&#34;=&#34;&#34;
[HKEY_CLASSES_ROOT\org-protocol\shell]
[HKEY_CLASSES_ROOT\org-protocol\shell\open]
[HKEY_CLASSES_ROOT\org-protocol\shell\open\command]
@=&#34;\&#34;C:\\Programme\\Emacs\\emacs\\bin\\emacsclientw.exe\&#34; \&#34;%1\&#34;&#34;
</code></pre></td></tr></table>
</div>
</div><h3 id="linux-用户请见--linux-使用-org-protoclhttpskisaragi-hiucomorg-protocol-linux">Linux 用户请见 👉 <a href="https://kisaragi-hiu.com/org-protocol-linux" target="_blank" rel="noopener noreffer">Linux 使用 org-protocl</a></h3>
<h2 id="根据自己使用的浏览器添加书签">根据自己使用的浏览器添加书签</h2>
<p><code>关于 org-protocol-capture-html 对不同的 浏览书签 见</code></p>
<ul>
<li><a href="https://github.com/alphapapa/org-protocol-capture-html" target="_blank" rel="noopener noreffer">Org-protocol-capture-html 官网</a></li>
</ul>
<h3 id="例如-chrome">例如 Chrome</h3>
<h4 id="在-chrome-新建-书签">在 Chrome 新建 书签</h4>
<ol>
<li>书签名称随便取</li>
<li>书签地址如下👇</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="nx">javascript</span><span class="o">:</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="s1">&#39;org-protocol:///capture-html?template=w&amp;url=&#39;</span> <span class="o">+</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;&amp;title=&#39;</span> <span class="o">+</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">title</span> <span class="o">||</span> <span class="s2">&#34;[untitled page]&#34;</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;&amp;body=&#39;</span> <span class="o">+</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">html</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span><span class="p">;</span> <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nb">window</span><span class="p">.</span><span class="nx">getSelection</span> <span class="o">!=</span> <span class="s2">&#34;undefined&#34;</span><span class="p">)</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">sel</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">getSelection</span><span class="p">();</span> <span class="k">if</span> <span class="p">(</span><span class="nx">sel</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">)</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">container</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&#34;div&#34;</span><span class="p">);</span> <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">len</span> <span class="o">=</span> <span class="nx">sel</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">len</span><span class="p">;</span> <span class="o">++</span><span class="nx">i</span><span class="p">)</span> <span class="p">{</span><span class="nx">container</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">sel</span><span class="p">.</span><span class="nx">getRangeAt</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">cloneContents</span><span class="p">());}</span> <span class="nx">html</span> <span class="o">=</span> <span class="nx">container</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">;}}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nb">document</span><span class="p">.</span><span class="nx">selection</span> <span class="o">!=</span> <span class="s2">&#34;undefined&#34;</span><span class="p">)</span> <span class="p">{</span><span class="k">if</span> <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">type</span> <span class="o">==</span> <span class="s2">&#34;Text&#34;</span><span class="p">)</span> <span class="p">{</span><span class="nx">html</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">().</span><span class="nx">htmlText</span><span class="p">;}}</span> <span class="kd">var</span> <span class="nx">relToAbs</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">href</span><span class="p">)</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&#34;a&#34;</span><span class="p">);</span> <span class="nx">a</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="nx">href</span><span class="p">;</span> <span class="kd">var</span> <span class="nx">abs</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">protocol</span> <span class="o">+</span> <span class="s2">&#34;//&#34;</span> <span class="o">+</span> <span class="nx">a</span><span class="p">.</span><span class="nx">host</span> <span class="o">+</span> <span class="nx">a</span><span class="p">.</span><span class="nx">pathname</span> <span class="o">+</span> <span class="nx">a</span><span class="p">.</span><span class="nx">search</span> <span class="o">+</span> <span class="nx">a</span><span class="p">.</span><span class="nx">hash</span><span class="p">;</span> <span class="nx">a</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span> <span class="k">return</span> <span class="nx">abs</span><span class="p">;};</span> <span class="kd">var</span> <span class="nx">elementTypes</span> <span class="o">=</span> <span class="p">[[</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;href&#39;</span><span class="p">],</span> <span class="p">[</span><span class="s1">&#39;img&#39;</span><span class="p">,</span> <span class="s1">&#39;src&#39;</span><span class="p">]];</span> <span class="kd">var</span> <span class="nx">div</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;div&#39;</span><span class="p">);</span> <span class="nx">div</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">html</span><span class="p">;</span> <span class="nx">elementTypes</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">elementType</span><span class="p">)</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">elements</span> <span class="o">=</span> <span class="nx">div</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">elementType</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span> <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">elements</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span><span class="nx">elements</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">elementType</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="nx">relToAbs</span><span class="p">(</span><span class="nx">elements</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">elementType</span><span class="p">[</span><span class="mi">1</span><span class="p">])));}});</span> <span class="k">return</span> <span class="nx">div</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">;}());</span>

<span class="nx">javascript</span><span class="o">:</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="s1">&#39;org-protocol:///capture-eww-readable?template=w&amp;url=&#39;</span> <span class="o">+</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;&amp;title=&#39;</span> <span class="o">+</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">title</span> <span class="o">||</span> <span class="s2">&#34;[untitled page]&#34;</span><span class="p">);</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="firefox-如下">Firefox 如下</h3>
<h4 id="在-firefox-新建-书签">在 Firefox 新建 书签</h4>
<ol>
<li>书签名称随便取</li>
<li>书签地址如下👇</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="nx">javascript</span><span class="o">:</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="s1">&#39;org-protocol://capture-html?template=w&amp;url=&#39;</span> <span class="o">+</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;&amp;title=&#39;</span> <span class="o">+</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">title</span> <span class="o">||</span> <span class="s2">&#34;[untitled page]&#34;</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;&amp;body=&#39;</span> <span class="o">+</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">html</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span><span class="p">;</span> <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getSelection</span> <span class="o">!=</span> <span class="s2">&#34;undefined&#34;</span><span class="p">)</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">sel</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getSelection</span><span class="p">();</span> <span class="k">if</span> <span class="p">(</span><span class="nx">sel</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">)</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">container</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&#34;div&#34;</span><span class="p">);</span> <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">len</span> <span class="o">=</span> <span class="nx">sel</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">len</span><span class="p">;</span> <span class="o">++</span><span class="nx">i</span><span class="p">)</span> <span class="p">{</span><span class="nx">container</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">sel</span><span class="p">.</span><span class="nx">getRangeAt</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">cloneContents</span><span class="p">());}</span> <span class="nx">html</span> <span class="o">=</span> <span class="nx">container</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">;}}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nb">document</span><span class="p">.</span><span class="nx">selection</span> <span class="o">!=</span> <span class="s2">&#34;undefined&#34;</span><span class="p">)</span> <span class="p">{</span><span class="k">if</span> <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">type</span> <span class="o">==</span> <span class="s2">&#34;Text&#34;</span><span class="p">)</span> <span class="p">{</span><span class="nx">html</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">().</span><span class="nx">htmlText</span><span class="p">;}}</span> <span class="kd">var</span> <span class="nx">relToAbs</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">href</span><span class="p">)</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&#34;a&#34;</span><span class="p">);</span> <span class="nx">a</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="nx">href</span><span class="p">;</span> <span class="kd">var</span> <span class="nx">abs</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">protocol</span> <span class="o">+</span> <span class="s2">&#34;//&#34;</span> <span class="o">+</span> <span class="nx">a</span><span class="p">.</span><span class="nx">host</span> <span class="o">+</span> <span class="nx">a</span><span class="p">.</span><span class="nx">pathname</span> <span class="o">+</span> <span class="nx">a</span><span class="p">.</span><span class="nx">search</span> <span class="o">+</span> <span class="nx">a</span><span class="p">.</span><span class="nx">hash</span><span class="p">;</span> <span class="nx">a</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span> <span class="k">return</span> <span class="nx">abs</span><span class="p">;};</span> <span class="kd">var</span> <span class="nx">elementTypes</span> <span class="o">=</span> <span class="p">[[</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;href&#39;</span><span class="p">],</span> <span class="p">[</span><span class="s1">&#39;img&#39;</span><span class="p">,</span> <span class="s1">&#39;src&#39;</span><span class="p">]];</span> <span class="kd">var</span> <span class="nx">div</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;div&#39;</span><span class="p">);</span> <span class="nx">div</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">html</span><span class="p">;</span> <span class="nx">elementTypes</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">elementType</span><span class="p">)</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">elements</span> <span class="o">=</span> <span class="nx">div</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">elementType</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span> <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">elements</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span><span class="nx">elements</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">elementType</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="nx">relToAbs</span><span class="p">(</span><span class="nx">elements</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">elementType</span><span class="p">[</span><span class="mi">1</span><span class="p">])));}});</span> <span class="k">return</span> <span class="nx">div</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">;}());</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="享受使用-">享受使用 👇</h2>
<h3 id="使用之前">使用之前</h3>
<p><code>请把你的 Chrome 或者 Firefox 的 书签 始终可见(比如在你浏览网页选中文字时可以点击你的书签)</code></p>
<h3 id="开始使用">开始使用</h3>
<ol>
<li>打开 Emacs</li>
<li>使用浏览器浏览网页</li>
<li>在网页 <code>选择你想收集的文本</code></li>
<li>点击你刚才新建的书签, 点击确定授权之类的</li>
<li>回到 Emacs 你会看到你已经收集到的 Capture</li>
<li>自己记得保存</li>
<li>你收集到的会 保存到 <code>~/Org/网页收集.org</code> 文件中(因为上面的配置保存到这文件， 请按自己需求更改)</li>
</ol>
<h2 id="如果你有更多的需求-请自己学习-因为网上并没有详细的教程使用-org-protocol-所以才有了本教程">如果你有更多的需求, 请自己学习, 因为网上并没有详细的教程使用 org-protocol 所以才有了本教程</h2>
<p><code>祝你使用愉快🤓⚡👉♥️🌹</code></p>
]]></description>
</item><item>
    <title>Vim和Emacs的选择</title>
    <link>http://isouthrain.github.io/2021-12-27-vim%E5%92%8Cemacs%E7%9A%84%E9%80%89%E6%8B%A9/</link>
    <pubDate>Mon, 27 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://isouthrain.github.io/2021-12-27-vim%E5%92%8Cemacs%E7%9A%84%E9%80%89%E6%8B%A9/</guid>
    <description><![CDATA[<h1 id="前言">前言</h1>
<p><strong>这篇文章并不是想引战, 而是试着去说明这两者的区别, 然后根据自己的需求选择 Vim 还是 Emacs</strong><br>
<strong>Vin 和 Emacs 各有自己的特点, 我只想把这两者的特点说明以下, 让读者根据自己的需求选择 Vim 还是 Emacs</strong></p>
<h2 id="编辑习惯">编辑习惯</h2>
<ol>
<li>
<p>Vim 在于<strong>按键的组合</strong>,比如你可以配置任何按键组合去触发某些动作,(e.g 你可以在 I 模式 配置 jk 去触发按键 <ESC> 进入 N 模式,然后相当于你没有输入过 jk), 这只是一个例子,反正你能做到全部Vim 能做的,甚至调用插件以及命令.</p>
</li>
<li>
<p>Emacs 做不到上面例子,Emacs 是靠函数触发的或者说你必须 Ctrl+才能实现某些功能(类似Vim 的例子), Emacs 就是一个 Elisp 语言的运行器, 你做的每一个动作都是在触发某个函数(e.g Ctrl+n 触发 next-line 函数将光标移动到下一行)</p>
</li>
<li>
<p>在这一点上显然是 Vim 更方便,因为按键组合真的非常好用,还不影响输入,对于 Emacs 就必须用两个按键同时按下, 这非常麻烦, 所以在按键组合中 <strong>Vim</strong> 有着非常好的优势, 因为 <strong>Emacs</strong> 要按 <strong>Ctrl</strong> 键, 左边小拇指真的难受, 不过 <strong>Emacs</strong> 也有模拟 <strong>Vim</strong> 的插件, 但仅仅是只能模拟控制光标和一些命令, 做不到可以设置按键组合触发某些功能!</p>
</li>
</ol>
<h2 id="vim-和-emacs-设置理念">Vim 和 Emacs 设置理念</h2>
<ol>
<li>
<p>Vim 类似一把短刀, 只做好一件事, 他仅仅是一个编辑器</p>
</li>
<li>
<p>Emacs 类似一个武器库, 可以做非常多的事, 但都不精, Emacs 有时候被人说做是一个 <strong>编辑器系统</strong> 我个人感觉还是挺符合的</p>
</li>
<li>
<p>总之 Emacs 比 Vim 做的事多得多, Emacs 是可以查看图片的, 而且现在 Emacs 已经发展到通过插件可以在Emacs进行网页浏览和播放视频了 [类似 Chrome 那种浏览器 ] (e.g EAF 框架)</p>
</li>
</ol>
<h2 id="emacs-的个人笔记管理">Emacs 的个人笔记管理</h2>
<ol>
<li>
<p>如果你有写笔记的习惯, 那么你一定听说过 Markdown 的语法, <strong>我要说的不是Markdown</strong> 而是Emacs内置的一个笔记系统 Org-mode.</p>
</li>
<li>
<p>Org-mode 只有在 Emacs 有着非常好的体验, 而在其它编辑软件基本无法发挥 org-mode 的强大</p>
</li>
<li>
<p>Org-mode 的表格可以运算, 代码块可以直接进行运行并返回结果, 捕获(Capture)功能, GTD管理系统(比如 日程安排(可以重复提醒), TODO, 计时器, 导出为其它格式)</p>
</li>
<li>
<p>所以说, 如果你打算使用 Emacs 真的非常多优点, org-mode 有点难学习(和设置), 因为使用 org 之前你的会 Emacs 以及 ELisp语言基础</p>
</li>
</ol>
<h2 id="如何选择-vim-和-emacs-">如何选择 Vim 和 Emacs ?</h2>
<p><strong>如果你需要很多的功能, 建议你选择 Emacs , 因为 Emacs 是可发展的, 以及可以运行图形界面, 使 GUI 功能 在Emacs成为了可能</strong></p>
<p><strong>Vim 只能查看文本之类的, 图片这些无法处理, 只能通过调用第三方应用才能处理查看</strong>
<strong>如果你非常需要 GTD 系统之类的, 那么 Emacs 是不二智选, 如果 你只是需要出来文本的,那么Vim更好</strong></p>
<p><strong>Emacs 如果你使用的非常好, 非常6, 那么你将非常牛逼, 而且我估计你未来时不会再更换编辑器了</strong></p>
<p>我个人是 Vim &mdash;&gt; Emacs &mdash;&gt; Vim 还是回到了 Vim</p>
]]></description>
</item><item>
    <title>Notion,Obsidian,Org-mode,Logseq,RoamResearch,笔记软件的选择</title>
    <link>http://isouthrain.github.io/2021-12-25-%E7%AC%94%E8%AE%B0%E8%BD%AF%E4%BB%B6%E7%9A%84%E9%80%89%E6%8B%A9/</link>
    <pubDate>Sat, 25 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://isouthrain.github.io/2021-12-25-%E7%AC%94%E8%AE%B0%E8%BD%AF%E4%BB%B6%E7%9A%84%E9%80%89%E6%8B%A9/</guid>
    <description><![CDATA[<h1 id="概述">概述</h1>
<p><strong>在如今这个时代每个人都需要做笔记，用来记录一些生活琐事，以及一些重要的事情，避免忘记， <em>好记性不如烂笔头</em></strong><br>
<strong>那么用什么软件记笔记呢?一个好的笔记软件可以快速让笔记快速记录。</strong><br>
<strong>笔记软件目前最好用的无非就是那几个，比如:</strong></p>
<ul>
<li><em>Notion</em></li>
<li><em>Obsidian</em></li>
<li><em>Logseq</em></li>
<li><em>Emacs Org-mode</em></li>
<li><em>RoamResearch</em></li>
</ul>
<p><strong>每个笔记都有自己的优缺点，看自己的选择，上面这几款除了 RoamResearch 没用过，其他的我都有用过，所以在此讨论下。</strong></p>
<p><strong>仅代表个人观点，仅供参考，无实际意义</strong></p>
<h2 id="notion">Notion</h2>
<h3 id="notion-优点">Notion 优点</h3>
<ul>
<li>免费</li>
<li>无限Page</li>
<li>大量的模板提供使用</li>
<li>非常的灵活</li>
<li>列表database的使用(e.g. 类似 Excel 的列表，可以自动进行运算)</li>
<li>全平台支持(主要是Web，Window，MacOS，Liux，Android，IOS)</li>
<li>Task 使用</li>
<li>日程的安排(有日历，并进行提醒)</li>
<li>每一行都是一个块(非常方便)</li>
<li>可以进行简单的GTD管理</li>
<li>支持Markdown语法</li>
<li>所见既所得</li>
<li>能导出(Markdown,PDF,CSV)</li>
<li>纯文本</li>
</ul>
<h3 id="notion-缺点">Notion 缺点</h3>
<ul>
<li>都是需要联网的，没有离线版(可以离线使用，联网后自动同步，但是上传图片不行)</li>
<li>数据都是保存在Notion官方里</li>
<li>导出功能对中文不友好(中文路径乱码)</li>
</ul>
<h3 id="对于-notion-个人建议">对于 Notion 个人建议</h3>
<p><strong>如果你需要 多人协同工作 和 列表数据的计算，Notion 将会很适合你</strong></p>
<p><strong>如果你需要把资料掌握在手了，而且是记录一些永久数据，不建议使用</strong></p>
<p>这些公司不知道什么时候倒闭，如果你把一些永久保存的资料放上去很不好，导出的时候就很难受了</p>
<p><strong>不过 Notion 至少可以熬10年，实在是Notion太棒了, 功能强大，界面美观，非常丝滑，令人一上手就不舍得离开，请谨慎使用</strong></p>
<h2 id="obsidian">Obsidian</h2>
<h3 id="obsidian-优点">Obsidian 优点</h3>
<ul>
<li>免费</li>
<li>全平台支持(Window，MacOS，Liux，Android，IOS)</li>
<li>本地存储(也可以使用官方提供的在线存储)</li>
<li>支持Markdown语法</li>
<li>所见即所得(Mobile 端目前没有实现，将来可能实现)</li>
<li>丰富的<strong>插件生态</strong></li>
<li>笔记双链</li>
<li>可以配合插件进行<strong>绘图</strong></li>
<li>Git进行版本管理(插件提供)</li>
<li>模板捕获</li>
<li>配置可迁移，复制配置目录就可以在全平台使用</li>
</ul>
<h3 id="obsidian-缺点">Obsidian 缺点</h3>
<ul>
<li>没有像Notion那样的database使用</li>
<li>表格的编辑要安装插件才勉强好用</li>
<li>无法进行GTD使用</li>
<li>要安装一些插件才能使<strong>Obsidian</strong>更好用</li>
</ul>
<h3 id="对于-obsidian-个人建议">对于 Obsidian 个人建议</h3>
<p><strong>个人目前</strong>使用的是<strong>Obsidian</strong>，因为配合插件的使用真的非常好用，而且可以掌控自己的数据，想保存在那就保存在哪。</p>
<ul>
<li>如果你需要自己掌控数据的话这款我觉得是最好的，虽然少了database的使用，但大量的插件可能以后会有人做出来</li>
<li>如果你经常需要<strong>捕获</strong>某个想法的话这个挺好的</li>
<li>缺点的话就是没有database了，自己看自己需求吧</li>
</ul>
<h3 id="以下是我个人在obsidian使用的插件">以下是我个人在Obsidian使用的插件</h3>
<ul>
<li>Calender  &mdash; 类似日历，点击日历的某天会创建当天的笔记(笔记名是当天的日期)</li>
<li>Advance Table &mdash; 表格的快速编辑</li>
<li>Dataview &mdash; 这个挺好的，类似一个数据库，可以根据自己的筛选所有文件和想要的记录</li>
<li>Excaldram &mdash; 绘图插件</li>
<li>Mind Map &mdash; 类似思维导图，自动把当前笔记形成思维导图观看</li>
<li>Kanban &mdash; 就是看板</li>
<li>Remember cursor position &mdash; 记录你查看笔记的位置</li>
<li>Templater &mdash; 模板的捕获，这个需要自己的配置</li>
<li>Dayplany &mdash; 查看自己的任务时间线</li>
</ul>
<h2 id="emacs-org-mode">Emacs Org-mode</h2>
<p><strong>大名鼎鼎的Emacs，Org-mode是真的非常强大，Org-mode类似Markdown也是一种语法，Org-mode可以做GTD管理个人的任务</strong><br>
<strong>Org-mode的强大是背靠Emacs的生态，缺点也因为是背靠Emacs难以在其他地方很好的使用</strong><br>
<strong>如果你喜欢折腾，那么Org-mode真的是非常好的，不过学习Org-mode之前你就要会简单使用Emacs</strong><br>
<em><strong>如果你是普通人，可以忽略Org-mode，因为Org-mode是真的难以熟练，因为你要配置Emacs和Org-mode的插件，并且org-mode只有在Emacs有比较好的体验，当然如果你真的会了你就会看不上其他的了。其他笔记能做的，Org-mode也能做，其他笔记不能做的，Org-mode也能做</strong></em></p>
<h3 id="org-mode-优点">Org-mode 优点</h3>
<ul>
<li>全平台支持(Window，MacOS，Liux，没有Android，IOS。Android可以在Termux使用)</li>
<li>GTD管理(日程，Tasks) &mdash; 这方面真的很强很强很强</li>
<li>表格可以自己使用算法进行计算</li>
<li>文本编程(可以直接执行代码并返回结果)</li>
<li>纯文本</li>
<li>丰富的生态插件</li>
<li>双链(插件 Org-Roam 提供)</li>
<li>不会落伍，因为Emacs是可扩展的，像<strong>双链</strong>一样Org-mode是没有双链的，是由开源社区的人开发的插件补上的</li>
<li>加密文本</li>
<li>捕获模板(可能是在笔记软件中功能最强大和功能最全得了)</li>
<li>导出功能好(PDF,html,Latx,Markdown)</li>
</ul>
<h3 id="org-mode-缺点">Org-mode 缺点</h3>
<ul>
<li>移动端没有好的体验</li>
<li>只在Emacs有好的体验</li>
</ul>
<h3 id="对于emacs-org-mode-个人建议">对于Emacs Org-mode 个人建议</h3>
<p><em><strong>如果你需要在移动端使用就不建议了，电脑的会是非常好的体验</strong></em><br>
<strong>但是将来会不会完美的迁移到移动端不好说</strong> <br>
<em><strong>强大的人会非常适合，会收益终身的，因为你以后不会再找其他笔记软件了</strong></em></p>
<h2 id="logseq">Logseq</h2>
<h3 id="logseq-优点">Logseq 优点</h3>
<ul>
<li>支持Org-mode，Markdown语法</li>
<li>Windows，MacOS，Linux</li>
<li>移动端(正在开发)</li>
<li>双链</li>
</ul>
<h3 id="对于-logseq-个人建议">对于 Logseq 个人建议</h3>
<p><em><strong>由于个人并没有深入使用，不过多评价，不过看见很多人都说好，估计是不错的，因为Logseq和Notion，Obsidian，Emacs可以相互对比的</strong></em></p>
<h2 id="roamresearch">RoamResearch</h2>
<p><strong>最近非常热门，本人没有使用过，因为付费的，听说双链之类的做的很好，可以使用一下</strong></p>
<h1 id="总结">总结</h1>
<p><strong>希望大家根据自己的需求选择，本人只是给出一些功能参考</strong></p>
]]></description>
</item></channel>
</rss>
