<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Emacs - 标签 - ISouthRain</title>
        <link>http://isouthrain.github.io/tags/emacs/</link>
        <description>Emacs - 标签 - ISouthRain</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>isouthrain@gmail.com (ISouthRain)</managingEditor>
            <webMaster>isouthrain@gmail.com (ISouthRain)</webMaster><lastBuildDate>Sat, 04 Jun 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://isouthrain.github.io/tags/emacs/" rel="self" type="application/rss+xml" /><item>
    <title>普通人如何使用Emacs</title>
    <link>http://isouthrain.github.io/2022-04-29-how-to-use-emacs/</link>
    <pubDate>Fri, 29 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://isouthrain.github.io/2022-04-29-how-to-use-emacs/</guid>
    <description><![CDATA[<p>#+D是否为草稿 <br/></p>
<p>#+Html导出主题 <br/></p>
<p>#+D置顶文章 1 为置顶 <br/></p>
<blockquote>
<p>Emacs 不仅可用于编码， 更可用于生活。 <br/></p>
</blockquote>
<h2 id="home">Home</h2>
<h3 id="阅读之前">阅读之前</h3>
<ul>
<li>本文的 <strong>普通人</strong> 指的是 <strong>非程序员</strong>  <br/></li>
<li>为什么编写这编文章? <br/>
<ul>
<li>因为受到了 <strong>Protesilaos Stavrou</strong> 影响 <br/>
<ul>
<li>Protesilaos Stavrou <a href="https://mp.weixin.qq.com/s/VfclpaYjCH8aLh0uMYny1w" target="_blank" rel="noopener noreffer">隐居、反内卷，不意味着躺平｜专访2021年度“杰出新自由软件贡献者”奖得主</a> <br/></li>
</ul>
</li>
</ul>
</li>
<li>本文章应该适合新手阅读,因为我定位在了 <em>如何使用 <strong>Emacs</strong></em> <br/></li>
<li>本文旨在让更多的人(非程序员)使用 Emacs 管理自己的生活, Emacs不单限于代码编辑 <br/></li>
</ul>
<h3 id="文章适合人群">文章适合人群</h3>
<ul>
<li><strong><em>追求自由与和平</em></strong> <br/></li>
<li>没有写过代码的 <br/></li>
<li>在寻找一个 <strong>笔记软件</strong> 的用户 <br/></li>
<li>使用GTD 管理自己的生活 <br/></li>
</ul>
<h3 id="安装-emacs">安装 Emacs</h3>
<ul>
<li><a href="https://www.gnu.org/software/emacs/" target="_blank" rel="noopener noreffer">官方网站</a> <br/></li>
<li><strong>Linux</strong>  <br/>
<ul>
<li>使用对应的包管理下载, 例如 <strong>Ubuntu</strong> <br/>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-elisp" data-lang="elisp"><span class="nv">sudo</span> <span class="nv">apt</span> <span class="nv">install</span> <span class="nv">emacs</span>
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
</li>
<li><strong>Windows</strong> <br/>
<ul>
<li><a href="http://gnu.mirrors.hoobly.com/emacs/windows/emacs-28/" target="_blank" rel="noopener noreffer">GNU Emacs</a> 选择最新版本 zip 文件, 解压运行 emacs.exe <br/></li>
</ul>
</li>
<li><strong>Mac OSX</strong> <br/>
<ul>
<li><a href="https://emacsformacos.com/" target="_blank" rel="noopener noreffer">Mac for Emacs</a> <br/></li>
</ul>
</li>
</ul>
<h3 id="简单使用">简单使用</h3>
<ul>
<li>
<p>按键说明 <br/></p>
<ul>
<li>开头的 <strong>C</strong> 代表 <strong>Ctrl</strong> 按键 <br/></li>
<li>开头的 <strong>M</strong> 代表 <strong>Alt</strong> 按键 <br/></li>
</ul>
</li>
<li>
<p>基础按键 <br/></p>
<ul>
<li><strong>M + x</strong> 输入命令 <br/></li>
<li><strong>C + g</strong> 取消所有命令/状态 <br/></li>
<li><strong>C + n</strong> 即 <strong>Ctrl + n</strong> , 等于 <strong>键盘向下按键</strong> , 解释为 <em>将光标移动到下一行</em> <br/></li>
<li><strong>C + p</strong> 即 <strong>Ctrl + n</strong> , 等于 <strong>键盘向下按键</strong> , 解释为 <em>将光标移动到下一行</em> <br/></li>
<li><strong>C + f</strong> 即 <strong>Ctrl + f</strong> , 等于 <strong>键盘向右按键</strong> , 解释为 <em>将光标向右移动一个字母</em> <br/></li>
<li><strong>C + b</strong> 即 <strong>Ctrl + b</strong> , 等于 <strong>键盘向左按键</strong> , 解释为 <em>将光标向左移动一个字母</em> <br/></li>
</ul>
</li>
<li>
<p>退出软件 <br/></p>
<ul>
<li><strong>C + x</strong> 之后再按 <strong>C + c</strong> <br/></li>
</ul>
</li>
<li>
<p><em>注意事项</em> <br/></p>
<ul>
<li>对于 Emacs 来说, 你的每一个动作都是在执行命令, <strong>例如, 当你按键 <em>C + n</em> 就是在执行 <em>next-line</em> 命令</strong>, 可以使用 M + x 输入 next-line 试试哦! <br/></li>
</ul>
</li>
</ul>
<h3 id="emacs-允许用户修改emacs所有的设置">Emacs 允许用户修改Emacs所有的设置</h3>
<ul>
<li>Emacs 是真正属于用户自己了, 如果你对Emacs现有的不满意, 自己完全可以设置 <br/></li>
<li><strong>按照自己的意愿使用Emacs</strong> <br/></li>
<li>Emacs 拥有的生态甚至已经比肩一个 <strong>系统</strong> 的生态了 <br/></li>
</ul>
<h3 id="基本配置">基本配置</h3>
<ul>
<li>所有的配置都会放到 init.el <br/></li>
<li>Linux/Uinx (Mac OSX) <br/>
<ul>
<li>~/.emacs.d/init.el <br/></li>
</ul>
</li>
<li>Windows <br/>
<ul>
<li>C:\Users\Jack\AppData\Roaming\.emacs.d\init.el <br/></li>
</ul>
</li>
</ul>
<h4 id="简单配置">简单配置</h4>
<ul>
<li>请将代码复制到 init.el 文件中, 修改后重启 Emacs 后生效 <br/></li>
<li>显示行号 <br/>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-elisp" data-lang="elisp"><span class="c1">;; ~/.emacs.d/init.el</span>
<span class="c1">;; ;; 开头为注释</span>
<span class="c1">;;显示行号</span>
<span class="p">(</span><span class="nv">global-linum-mode</span> <span class="mi">1</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>以下为个人的基本配置 <br/>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-elisp" data-lang="elisp">      <span class="c1">;; 设置编码</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">default-buffer-file-coding-system</span> <span class="ss">&#39;utf-8</span><span class="p">)</span>
<span class="p">(</span><span class="nv">prefer-coding-system</span> <span class="ss">&#39;utf-8</span><span class="p">)</span>
    
      <span class="c1">;;显示行号</span>
<span class="p">(</span><span class="nv">global-linum-mode</span> <span class="mi">1</span><span class="p">)</span>
<span class="c1">;;高亮当前行</span>
<span class="p">(</span><span class="nv">global-hl-line-mode</span> <span class="mi">1</span><span class="p">)</span>
<span class="c1">;;关闭启动画面</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">inhibit-startup-message</span> <span class="no">t</span><span class="p">)</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">toggle-truncate-lines</span> <span class="no">t</span><span class="p">)</span>
    
<span class="c1">;;显示时间</span>
<span class="p">(</span><span class="nv">display-time-mode</span> <span class="mi">1</span><span class="p">)</span> <span class="c1">;; 常显</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">display-time-24hr-format</span> <span class="no">t</span><span class="p">)</span> <span class="c1">;;格式</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">display-time-day-and-date</span> <span class="no">t</span><span class="p">)</span> <span class="c1">;;显示时间、星期、日期</span>
    
    
<span class="c1">;; 关闭启动帮助画面</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">inhibit-splash-screen</span> <span class="mi">1</span><span class="p">)</span>
    
<span class="c1">;; 备份文件 nil or t</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">make-backup-files</span> <span class="no">nil</span><span class="p">)</span>
    
<span class="c1">;; 自动加载外部修改的文件</span>
<span class="p">(</span><span class="nv">global-auto-revert-mode</span> <span class="mi">1</span><span class="p">)</span>
    
<span class="c1">;; 关闭自动保存文件</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">auto-save-default</span> <span class="no">t</span><span class="p">)</span>
<span class="c1">;; 关闭警告声</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">ring-bell-function</span> <span class="ss">&#39;ignore</span><span class="p">)</span>
    
<span class="c1">;; 简化yes和no</span>
<span class="p">(</span><span class="nf">fset</span> <span class="ss">&#39;yes-or-no-p</span> <span class="ss">&#39;y-or-n-p</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
<h4 id="区分系统类型和gui或者tui界面">区分系统类型和GUI或者TUI界面</h4>
<ul>
<li>以下设置会根据你目前的系统而加载代码, 通常用来区分 windows 和 linux 配置路径问题 <br/></li>
</ul>
<!--listend-->
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span class="c1">;;不同系统的配置</span>
<span class="c1">;; Windows</span>
<span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nv">string=</span> <span class="s">&#34;windows-nt&#34;</span> <span class="nv">system-type</span><span class="p">)</span>
<span class="c1">;; 代码放在这个范围</span>
<span class="p">)</span>
<span class="c1">;; Linux</span>
<span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nv">string=</span> <span class="s">&#34;gnu/linux&#34;</span> <span class="nv">system-type</span><span class="p">)</span>
<span class="c1">;; 代码放在这个范围</span>
<span class="p">)</span>
<span class="c1">;; Mac OSX</span>
<span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nv">string=</span> <span class="s">&#34;darwin&#34;</span> <span class="nv">system-type</span><span class="p">)</span>
<span class="c1">;; 代码放在这个范围</span>
<span class="p">)</span>
<span class="c1">;; GUI图形界面或者TUI终端界面</span>
<span class="p">(</span><span class="nb">if</span> <span class="p">(</span><span class="nv">display-graphic-p</span><span class="p">)</span>
    <span class="c1">;; GUI 代码放置，多行代码的话用 (progn) 包一下</span>
    <span class="p">(</span><span class="nb">progn</span> <span class="p">(</span><span class="nf">message</span> <span class="s">&#34;这是GUI读取的配置1&#34;</span><span class="p">)</span>
           <span class="p">(</span><span class="nf">message</span> <span class="s">&#34;这是GUI读取的配置2&#34;</span><span class="p">)</span>
           <span class="p">)</span>
    <span class="c1">;; TUI 代码放置</span>
    <span class="p">(</span><span class="nf">message</span> <span class="s">&#34;这是TUI 读取的配置1&#34;</span><span class="p">)</span>
    <span class="p">(</span><span class="nf">message</span> <span class="s">&#34;这是TUI 读取的配置2&#34;</span><span class="p">)</span>
    <span class="p">)</span>

</code></pre></td></tr></table>
</div>
</div><h3 id="配置管理-请重视此标题-这将在未来帮助你减少大量时间">配置管理, 请重视此标题, 这将在未来帮助你减少大量时间</h3>
<ul>
<li>希望用户认真学习一下管理配置, <em>现在即使不会去管理, 但请参看</em> <br/></li>
<li>你永远不会对你的配置满意, 所以请学习管理你自己的配置 <br/></li>
<li>新建 ~/.emacs.d/core/init-basic.el 注意路径 <br/>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-elisp" data-lang="elisp"> <span class="c1">;; ~/.emacs.d/core/init-basic.el</span>
<span class="c1">;; 存放你的配置代码</span>
<span class="c1">;;显示行号</span>
<span class="p">(</span><span class="nv">global-linum-mode</span> <span class="mi">1</span><span class="p">)</span>
    
<span class="p">(</span><span class="nb">provide</span> <span class="ss">&#39;init-basic</span><span class="p">)</span> <span class="c1">;; 必要的, 让文件可以被调用</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>编辑 ~/.emacs.d/init.el <br/>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-elisp" data-lang="elisp"><span class="c1">;; ~/.emacs.d/init.e</span>
<span class="c1">;; 添加上面要添加进来的文件目录</span>
<span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">&#39;load-path</span> <span class="p">(</span><span class="nf">expand-file-name</span> <span class="s">&#34;core&#34;</span> <span class="nv">user-emacs-directory</span><span class="p">))</span> <span class="c1">;; 必要的, 注意路径</span>
<span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;init-basic</span><span class="p">)</span> <span class="c1">;; 将 ~/.emacs.d/core/init-basic.el 调用</span>
<span class="c1">;; 这样就可以大胆把你的配置分不同文件管理了, 记得调用就好</span>
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
<h3 id="包安装">包安装</h3>
<ul>
<li>对于 Emacs 原生来说太简陋了, 看起来可不太优雅 <br/></li>
<li>Emacs 安装扩展包使得更加好看与适用 <br/></li>
</ul>
<h4 id="原生安装">原生安装</h4>
<ul>
<li>Emacs 自带一个安装扩展包的方法 <br/>
<ul>
<li><strong>在此 <em>不解释原生安装包方法</em> , 因为原生安装的方法并不好用,而且一旦安装很多软件包的话会影响到 Emacs 的启动速度</strong> <br/></li>
</ul>
</li>
</ul>
<h4 id="使用-use-package-安装扩展包">使用 Use-package 安装扩展包</h4>
<!--list-separator-->
<ul>
<li>
<p>配置 Use-package</p>
<p><strong>有关更多 use-package</strong> 详解请到官方查看 <a href="https://github.com/jwiegley/use-package" target="_blank" rel="noopener noreffer">GitHub - jwiegley/use-package: A use-package declaration for simplifying your&hellip;</a> <br/></p>
<ul>
<li>use-package 常用参数 <br/>
<ul>
<li><strong>ensure t/nil</strong> ;; t 将会从官方网站下载, nil 从本地下载, 利用 load-path 参数指定目录加载 <br/></li>
<li><strong>load-path &ldquo;path&rdquo;</strong> ;; 指定包加载路径 <br/></li>
<li><strong>defer num</strong> ;; <em>num 为数字, 单位为秒, 意思是当 emacs 启动后多少秒再加载这个包, 对于以后减少 Emacs 启动时间非常有用</em> <br/></li>
<li><strong>init</strong> ;; 加载包前加载 init 的配置 <br/></li>
<li><strong>config</strong> ;; 加载完包后再加载 config 的配置 <br/></li>
</ul>
</li>
</ul>
 <!--listend-->
<ol>
<li>将以下内容放到你的配置文件中 init.el <br/></li>
</ol>
 <!--listend-->
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-elisp" data-lang="elisp"><span class="p">(</span><span class="nv">package-initialize</span><span class="p">)</span>
<span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;package</span><span class="p">)</span>
<span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">&#39;package-archives</span>
                         <span class="o">&#39;</span><span class="p">(</span><span class="s">&#34;melpa&#34;</span> <span class="o">.</span> <span class="s">&#34;https://melpa.org/packages/&#34;</span><span class="p">)</span>
<span class="p">)</span>
<span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nv">not</span> <span class="p">(</span><span class="nv">package-installed-p</span> <span class="ss">&#39;use-package</span><span class="p">))</span>
  <span class="p">(</span><span class="nv">package-refresh-contents</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">package-install</span> <span class="ss">&#39;use-package</span><span class="p">)</span>
  <span class="p">)</span>
 <span class="c1">;; This is only needed once, near the top of the file</span>
<span class="p">(</span><span class="nb">eval-when-compile</span>
<span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;use-package</span><span class="p">))</span>
<span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;use-package-ensure</span><span class="p">)</span>
<span class="c1">;; 自动下载，不需要 :ensure t</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">use-package-always-ensure</span> <span class="no">t</span><span class="p">)</span>
   
</code></pre></td></tr></table>
</div>
</div><ol>
<li>下载一个包试试 <br/>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-elisp" data-lang="elisp"><span class="p">(</span><span class="nb">use-package</span> <span class="nv">包名</span><span class="p">)</span>
<span class="c1">;; 例如 (use-package evil), 就会下载evil包</span>
<span class="c1">;; 重新启动 Emaccs 就会看到目录 ~/.emacs.d/elpa 有这个包了</span>
</code></pre></td></tr></table>
</div>
</div></li>
</ol>
</li>
</ul>
<h3 id="emacs-光标移动选择">Emacs 光标移动选择</h3>
<ul>
<li>如果你是 Vim 用户, 建议安装 <strong>Evil</strong> 这个包, 它会模拟 vi 的键盘操作流程. <br/></li>
<li>使用 Emacs 原生按键, 这可能 <em>废手指</em> 哈哈哈, 建议将 <strong>Ctrl</strong> 换成 <strong>Caps Lock</strong> , Windows 用户使用 <strong>AutoHotkey</strong>, 其余类似. <br/></li>
<li><strong>Meow</strong> 猫态编辑, 有点类似 vim , 但是比 evil 更加的小巧和高效, <em>不过建议新人先不用这个</em>   <br/></li>
</ul>
<h4 id="个人推荐键盘">个人推荐键盘</h4>
<ul>
<li><strong>Evil</strong> 可能更加使用新手, 推荐去搜索一下 vi 键盘如何使用 <br/>
<ul>
<li>传送门 &mdash;&gt;  <a href="https://github.com/chloneda/vim-cheatsheet" target="_blank" rel="noopener noreffer">Vi 速查表</a>   <br/></li>
</ul>
</li>
</ul>
<h3 id="美化-emacs">美化 Emacs</h3>
<h4 id="theme-主题">theme 主题</h4>
<p>Emacs 只能加载一个主题, 但是可以安装多个主题, 可以在 Emacs 启动后再切换主题, 本文以 monokai 主题为例子 <br/></p>
<ul>
<li>monokai <br/>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-elisp" data-lang="elisp"><span class="p">(</span><span class="nb">use-package</span> <span class="nv">monokai</span>
   <span class="nb">:ensure</span> <span class="no">t</span>
   <span class="nb">:config</span>
   <span class="p">(</span><span class="nv">load-theme</span> <span class="ss">&#39;monokai</span> <span class="no">t</span><span class="p">)</span>
   <span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
<h4 id="mode-line-下方的状态栏美化-以-doom-modeline-为例-还有很多选择">mode-line 下方的状态栏美化, 以 doom-modeline 为例, 还有很多选择</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span><span class="lnt">153
</span><span class="lnt">154
</span><span class="lnt">155
</span><span class="lnt">156
</span><span class="lnt">157
</span><span class="lnt">158
</span><span class="lnt">159
</span><span class="lnt">160
</span><span class="lnt">161
</span><span class="lnt">162
</span><span class="lnt">163
</span><span class="lnt">164
</span><span class="lnt">165
</span><span class="lnt">166
</span><span class="lnt">167
</span><span class="lnt">168
</span><span class="lnt">169
</span><span class="lnt">170
</span><span class="lnt">171
</span><span class="lnt">172
</span><span class="lnt">173
</span><span class="lnt">174
</span><span class="lnt">175
</span><span class="lnt">176
</span><span class="lnt">177
</span><span class="lnt">178
</span><span class="lnt">179
</span><span class="lnt">180
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-elisp" data-lang="elisp"><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
<span class="c1">;; Modeline</span>
<span class="p">(</span><span class="nb">use-package</span> <span class="nv">doom-modeline</span>
<span class="nb">:ensure</span> <span class="no">t</span> <span class="c1">;; 从网上下载</span>
<span class="nb">:defer</span> <span class="mi">1</span>  <span class="c1">;; 延迟加载</span>
<span class="c1">;; :init (doom-modeline-mode 1)</span>
<span class="nb">:config</span>
<span class="p">(</span><span class="nv">doom-modeline-mode</span> <span class="mi">1</span><span class="p">)</span>

<span class="c1">;; If non-nil, cause imenu to see `doom-modeline&#39; declarations.</span>
<span class="c1">;; This is done by adjusting `lisp-imenu-generic-expression&#39; to</span>
<span class="c1">;; include support for finding `doom-modeline-def-*&#39; forms.</span>
<span class="c1">;; Must be set before loading doom-modeline.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-support-imenu</span> <span class="no">t</span><span class="p">)</span>

<span class="c1">;; How tall the mode-line should be. It&#39;s only respected in GUI.</span>
<span class="c1">;; If the actual char height is larger, it respects the actual height.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-height</span> <span class="mi">15</span><span class="p">)</span>

<span class="c1">;; How wide the mode-line bar should be. It&#39;s only respected in GUI.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-bar-width</span> <span class="mi">4</span><span class="p">)</span>

<span class="c1">;; Whether to use hud instead of default bar. It&#39;s only respected in GUI.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-hud</span> <span class="no">nil</span><span class="p">)</span>

<span class="c1">;; The limit of the window width.</span>
<span class="c1">;; If `window-width&#39; is smaller than the limit, some information won&#39;t be</span>
<span class="c1">;; displayed. It can be an integer or a float number. `nil&#39; means no limit.&#34;</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-window-width-limit</span> <span class="mf">0.25</span><span class="p">)</span>

<span class="c1">;; How to detect the project root.</span>
<span class="c1">;; nil means to use `default-directory&#39;.</span>
<span class="c1">;; The project management packages have some issues on detecting project root.</span>
<span class="c1">;; e.g. `projectile&#39; doesn&#39;t handle symlink folders well, while `project&#39; is unable</span>
<span class="c1">;; to hanle sub-projects.</span>
<span class="c1">;; You can specify one if you encounter the issue.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-project-detection</span> <span class="ss">&#39;auto</span><span class="p">)</span>

<span class="c1">;; Determines the style used by `doom-modeline-buffer-file-name&#39;.</span>
<span class="c1">;;</span>
<span class="c1">;; Given ~/Projects/FOSS/emacs/lisp/comint.el</span>
<span class="c1">;;   auto =&gt; emacs/lisp/comint.el (in a project) or comint.el</span>
<span class="c1">;;   truncate-upto-project =&gt; ~/P/F/emacs/lisp/comint.el</span>
<span class="c1">;;   truncate-from-project =&gt; ~/Projects/FOSS/emacs/l/comint.el</span>
<span class="c1">;;   truncate-with-project =&gt; emacs/l/comint.el</span>
<span class="c1">;;   truncate-except-project =&gt; ~/P/F/emacs/l/comint.el</span>
<span class="c1">;;   truncate-upto-root =&gt; ~/P/F/e/lisp/comint.el</span>
<span class="c1">;;   truncate-all =&gt; ~/P/F/e/l/comint.el</span>
<span class="c1">;;   truncate-nil =&gt; ~/Projects/FOSS/emacs/lisp/comint.el</span>
<span class="c1">;;   relative-from-project =&gt; emacs/lisp/comint.el</span>
<span class="c1">;;   relative-to-project =&gt; lisp/comint.el</span>
<span class="c1">;;   file-name =&gt; comint.el</span>
<span class="c1">;;   buffer-name =&gt; comint.el&lt;2&gt; (uniquify buffer name)</span>
<span class="c1">;;</span>
<span class="c1">;; If you are experiencing the laggy issue, especially while editing remote files</span>
<span class="c1">;; with tramp, please try `file-name&#39; style.</span>
<span class="c1">;; Please refer to https://github.com/bbatsov/projectile/issues/657.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-buffer-file-name-style</span> <span class="ss">&#39;auto</span><span class="p">)</span>

<span class="c1">;; Whether display icons in the mode-line.</span>
<span class="c1">;; While using the server mode in GUI, should set the value explicitly.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-icon</span> <span class="p">(</span><span class="nv">display-graphic-p</span><span class="p">))</span>

<span class="c1">;; Whether display the icon for `major-mode&#39;. It respects `doom-modeline-icon&#39;.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-major-mode-icon</span> <span class="no">t</span><span class="p">)</span>

<span class="c1">;; Whether display the colorful icon for `major-mode&#39;.</span>
<span class="c1">;; It respects `all-the-icons-color-icons&#39;.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-major-mode-color-icon</span> <span class="no">t</span><span class="p">)</span>

<span class="c1">;; Whether display the icon for the buffer state. It respects `doom-modeline-icon&#39;.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-buffer-state-icon</span> <span class="no">t</span><span class="p">)</span>

<span class="c1">;; Whether display the modification icon for the buffer.</span>
<span class="c1">;; It respects `doom-modeline-icon&#39; and `doom-modeline-buffer-state-icon&#39;.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-buffer-modification-icon</span> <span class="no">t</span><span class="p">)</span>

<span class="c1">;; Whether to use unicode as a fallback (instead of ASCII) when not using icons.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-unicode-fallback</span> <span class="no">nil</span><span class="p">)</span>

<span class="c1">;; Whether display the buffer name.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-buffer-name</span> <span class="no">t</span><span class="p">)</span>

<span class="c1">;; Whether display the minor modes in the mode-line.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-minor-modes</span> <span class="no">nil</span><span class="p">)</span>

<span class="c1">;; If non-nil, a word count will be added to the selection-info modeline segment.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-enable-word-count</span> <span class="no">nil</span><span class="p">)</span>

<span class="c1">;; Major modes in which to display word count continuously.</span>
<span class="c1">;; Also applies to any derived modes. Respects `doom-modeline-enable-word-count&#39;.</span>
<span class="c1">;; If it brings the sluggish issue, disable `doom-modeline-enable-word-count&#39; or</span>
<span class="c1">;; remove the modes from `doom-modeline-continuous-word-count-modes&#39;.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-continuous-word-count-modes</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">markdown-mode</span> <span class="nv">gfm-mode</span> <span class="nv">org-mode</span><span class="p">))</span>

<span class="c1">;; Whether display the buffer encoding.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-buffer-encoding</span> <span class="no">t</span><span class="p">)</span>

<span class="c1">;; Whether display the indentation information.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-indent-info</span> <span class="no">nil</span><span class="p">)</span>

<span class="c1">;; If non-nil, only display one number for checker information if applicable.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-checker-simple-format</span> <span class="no">t</span><span class="p">)</span>

<span class="c1">;; The maximum number displayed for notifications.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-number-limit</span> <span class="mi">99</span><span class="p">)</span>

<span class="c1">;; The maximum displayed length of the branch name of version control.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-vcs-max-length</span> <span class="mi">12</span><span class="p">)</span>

<span class="c1">;; Whether display the workspace name. Non-nil to display in the mode-line.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-workspace-name</span> <span class="no">t</span><span class="p">)</span>

<span class="c1">;; Whether display the perspective name. Non-nil to display in the mode-line.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-persp-name</span> <span class="no">t</span><span class="p">)</span>

<span class="c1">;; If non nil the default perspective name is displayed in the mode-line.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-display-default-persp-name</span> <span class="no">nil</span><span class="p">)</span>

<span class="c1">;; If non nil the perspective name is displayed alongside a folder icon.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-persp-icon</span> <span class="no">t</span><span class="p">)</span>

<span class="c1">;; Whether display the `lsp&#39; state. Non-nil to display in the mode-line.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-lsp</span> <span class="no">t</span><span class="p">)</span>

<span class="c1">;; Whether display the GitHub notifications. It requires `ghub&#39; package.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-github</span> <span class="no">nil</span><span class="p">)</span>

<span class="c1">;; The interval of checking GitHub.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-github-interval</span> <span class="p">(</span><span class="nf">*</span> <span class="mi">30</span> <span class="mi">60</span><span class="p">))</span>

<span class="c1">;; Whether display the modal state icon.</span>
<span class="c1">;; Including `evil&#39;, `overwrite&#39;, `god&#39;, `ryo&#39; and `xah-fly-keys&#39;, etc.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-modal-icon</span> <span class="no">t</span><span class="p">)</span>

<span class="c1">;; Whether display the mu4e notifications. It requires `mu4e-alert&#39; package.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-mu4e</span> <span class="no">nil</span><span class="p">)</span>
<span class="c1">;; also enable the start of mu4e-alert</span>
<span class="c1">;; (mu4e-alert-enable-mode-line-display)</span>

<span class="c1">;; Whether display the gnus notifications.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-gnus</span> <span class="no">t</span><span class="p">)</span>

<span class="c1">;; Whether gnus should automatically be updated and how often (set to 0 or smaller than 0 to disable)</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-gnus-timer</span> <span class="mi">2</span><span class="p">)</span>

<span class="c1">;; Wheter groups should be excludede when gnus automatically being updated.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-gnus-excluded-groups</span> <span class="o">&#39;</span><span class="p">(</span><span class="s">&#34;dummy.group&#34;</span><span class="p">))</span>

<span class="c1">;; Whether display the IRC notifications. It requires `circe&#39; or `erc&#39; package.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-irc</span> <span class="no">t</span><span class="p">)</span>

<span class="c1">;; Function to stylize the irc buffer names.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-irc-stylize</span> <span class="ss">&#39;identity</span><span class="p">)</span>

<span class="c1">;; Whether display the environment version.</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-env-version</span> <span class="no">t</span><span class="p">)</span>
<span class="c1">;; Or for individual languages</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-env-enable-python</span> <span class="no">t</span><span class="p">)</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-env-enable-ruby</span> <span class="no">t</span><span class="p">)</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-env-enable-perl</span> <span class="no">t</span><span class="p">)</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-env-enable-go</span> <span class="no">t</span><span class="p">)</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-env-enable-elixir</span> <span class="no">t</span><span class="p">)</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-env-enable-rust</span> <span class="no">t</span><span class="p">)</span>

<span class="c1">;; Change the executables to use for the language version string</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-env-python-executable</span> <span class="s">&#34;python&#34;</span><span class="p">)</span> <span class="c1">; or `python-shell-interpreter&#39;</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-env-ruby-executable</span> <span class="s">&#34;ruby&#34;</span><span class="p">)</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-env-perl-executable</span> <span class="s">&#34;perl&#34;</span><span class="p">)</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-env-go-executable</span> <span class="s">&#34;go&#34;</span><span class="p">)</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-env-elixir-executable</span> <span class="s">&#34;iex&#34;</span><span class="p">)</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-env-rust-executable</span> <span class="s">&#34;rustc&#34;</span><span class="p">)</span>

<span class="c1">;; What to display as the version while a new one is being loaded</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-env-load-string</span> <span class="s">&#34;...&#34;</span><span class="p">)</span>

<span class="c1">;; Hooks that run before/after the modeline version string is updated</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-before-update-env-hook</span> <span class="no">nil</span><span class="p">)</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">doom-modeline-after-update-env-hook</span> <span class="no">nil</span><span class="p">)</span>
<span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="buffer-tab-上方的-tab">buffer-tab, 上方的 tab</h4>
<ul>
<li>以 awesome-tab 为例, 下载文件  <a href="https://raw.githubusercontent.com/manateelazycat/awesome-tab/master/awesome-tab.el" target="_blank" rel="noopener noreffer">awesome-tab.el</a> <br/></li>
<li>并把文件放到 .emacs.d/core/plugins 文件夹 <br/></li>
</ul>
<!--listend-->
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-elisp" data-lang="elisp"><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
<span class="c1">;; awesome-tab 管理 Buffer</span>
<span class="p">(</span><span class="nb">use-package</span> <span class="nv">awesome-tab</span>
  <span class="nb">:ensure</span> <span class="no">nil</span>
  <span class="nb">:defer</span> <span class="mi">2</span>
  <span class="nb">:load-path</span> <span class="s">&#34;~/.emacs.d/core/plugins&#34;</span> <span class="c1">;; 从次路径加载这个包</span>
  <span class="nb">:config</span>
  <span class="p">(</span><span class="nv">awesome-tab-mode</span> <span class="no">t</span><span class="p">)</span>
<span class="c1">;; 设置标签栏长度</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">awesome-tab-label-fixed-length</span> <span class="mi">14</span><span class="p">)</span>
<span class="c1">;; 高度</span>
<span class="p">(</span><span class="nb">setq</span> <span class="nv">awesome-tab-height</span> <span class="mi">150</span><span class="p">)</span>
<span class="c1">;; 按使用索引排行</span>
<span class="c1">;; (setq awesome-tab-show-tab-index t)</span>
<span class="c1">;; 如果使用 helm</span>
<span class="p">(</span><span class="nv">awesome-tab-build-helm-source</span><span class="p">)</span>
<span class="c1">;; 隐藏那些buffer</span>
<span class="p">(</span><span class="nb">defun</span> <span class="nv">awesome-tab-hide-tab</span> <span class="p">(</span><span class="nv">x</span><span class="p">)</span>
  <span class="p">(</span><span class="nb">let</span> <span class="p">((</span><span class="nv">name</span> <span class="p">(</span><span class="nf">format</span> <span class="s">&#34;%s&#34;</span> <span class="nv">x</span><span class="p">)))</span>
    <span class="p">(</span><span class="nb">or</span>
     <span class="p">(</span><span class="nv">string-prefix-p</span> <span class="s">&#34;*epc&#34;</span> <span class="nv">name</span><span class="p">)</span>
     <span class="p">(</span><span class="nv">string-prefix-p</span> <span class="s">&#34;*helm&#34;</span> <span class="nv">name</span><span class="p">)</span>
     <span class="p">(</span><span class="nv">string-prefix-p</span> <span class="s">&#34;*bm-bookmarks*&#34;</span> <span class="nv">name</span><span class="p">)</span>
     <span class="p">(</span><span class="nv">string-prefix-p</span> <span class="s">&#34;*Compile-Log*&#34;</span> <span class="nv">name</span><span class="p">)</span>
     <span class="p">(</span><span class="nv">string-prefix-p</span> <span class="s">&#34;*lsp&#34;</span> <span class="nv">name</span><span class="p">)</span>
     <span class="p">(</span><span class="nb">and</span> <span class="p">(</span><span class="nv">string-prefix-p</span> <span class="s">&#34;magit&#34;</span> <span class="nv">name</span><span class="p">)</span>
               <span class="p">(</span><span class="nv">not</span> <span class="p">(</span><span class="nv">file-name-extension</span> <span class="nv">name</span><span class="p">)))</span>
     <span class="p">)))</span>

<span class="c1">;; buffer 群组归类</span>
<span class="p">(</span><span class="nb">defun</span> <span class="nv">awesome-tab-buffer-groups</span> <span class="p">()</span>
  <span class="s">&#34;</span><span class="ss">`awesome-tab-buffer-groups&#39;</span><span class="s"> control buffers&#39; group rules.
</span><span class="s">
</span><span class="s">Group awesome-tab with mode if buffer is derived from </span><span class="ss">`eshell-mode&#39;</span><span class="s"> </span><span class="ss">`emacs-lisp-mode&#39;</span><span class="s"> </span><span class="ss">`dired-mode&#39;</span><span class="s"> </span><span class="ss">`org-mode&#39;</span><span class="s"> </span><span class="ss">`magit-mode&#39;</span><span class="s">.
</span><span class="s">All buffer name start with * will group to \&#34;Emacs\&#34;.
</span><span class="s">Other buffer group by </span><span class="ss">`awesome-tab-get-group-name&#39;</span><span class="s"> with project name.&#34;</span>
  <span class="p">(</span><span class="nf">list</span>
   <span class="p">(</span><span class="nb">cond</span>
    <span class="p">((</span><span class="nb">or</span> <span class="p">(</span><span class="nf">string-equal</span> <span class="s">&#34;*&#34;</span> <span class="p">(</span><span class="nf">substring</span> <span class="p">(</span><span class="nf">buffer-name</span><span class="p">)</span> <span class="mi">0</span> <span class="mi">1</span><span class="p">))</span>
         <span class="p">(</span><span class="nf">memq</span> <span class="nv">major-mode</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">magit-process-mode</span>
                            <span class="nv">magit-status-mode</span>
                            <span class="nv">magit-diff-mode</span>
                            <span class="nv">magit-log-mode</span>
                            <span class="nv">magit-file-mode</span>
                            <span class="nv">magit-blob-mode</span>
                            <span class="nv">magit-blame-mode</span>
                            <span class="p">)))</span>
     <span class="s">&#34;Emacs&#34;</span><span class="p">)</span>
    <span class="p">((</span><span class="nv">derived-mode-p</span> <span class="ss">&#39;eshell-mode</span><span class="p">)</span>
     <span class="s">&#34;EShell&#34;</span><span class="p">)</span>
    <span class="p">((</span><span class="nv">derived-mode-p</span> <span class="ss">&#39;emacs-lisp-mode</span><span class="p">)</span>
     <span class="s">&#34;Elisp&#34;</span><span class="p">)</span>
    <span class="p">((</span><span class="nv">derived-mode-p</span> <span class="ss">&#39;dired-mode</span><span class="p">)</span>
     <span class="s">&#34;Dired&#34;</span><span class="p">)</span>
    <span class="p">((</span><span class="nf">memq</span> <span class="nv">major-mode</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">org-mode</span> <span class="nv">org-agenda-mode</span> <span class="nv">diary-mode</span><span class="p">))</span>
     <span class="s">&#34;OrgMode&#34;</span><span class="p">)</span>
    <span class="p">(</span><span class="no">t</span>
     <span class="p">(</span><span class="nv">awesome-tab-get-group-name</span> <span class="p">(</span><span class="nf">current-buffer</span><span class="p">))))))</span>

<span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="增强-emacs-搜索功能">增强 Emacs 搜索功能</h3>
<h4 id="最新三套装">最新三套装</h4>
<ul>
<li>vertico 提供一个搜索框架 <br/></li>
<li>consult 文本搜索 <br/></li>
<li>orderless 使用无序搜索, 例如你要搜 whoami ，你可以直接 am who <br/></li>
</ul>
<!--list-separator-->
<ul>
<li>
<p>vertico</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-elisp" data-lang="elisp"><span class="p">(</span><span class="nb">use-package</span> <span class="nv">vertico</span>
  <span class="nb">:defer</span> <span class="mi">3</span>
  <span class="nb">:ensure</span> <span class="no">t</span>
  <span class="nb">:config</span>
  <span class="p">(</span><span class="nv">vertico-mode</span> <span class="no">t</span><span class="p">))</span>
<span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
<span class="c1">;; 每次重启后都有搜索记录</span>
<span class="p">(</span><span class="nb">use-package</span> <span class="nv">savehist</span>
  <span class="nb">:defer</span> <span class="mi">3</span>
  <span class="nb">:ensure</span> <span class="no">nil</span>
  <span class="nb">:init</span>
  <span class="p">(</span><span class="nv">savehist-mode</span><span class="p">)</span>
  <span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>安装后重启 Emacs , 再按 M-x 看看有什么不同 <br/></p>
</li>
</ul>
<!--list-separator-->
<ul>
<li>
<p>orderless</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-elisp" data-lang="elisp"><span class="c1">;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
<span class="c1">;; ;; Optionally use the `orderless&#39; completion style.</span>
<span class="p">(</span><span class="nb">use-package</span> <span class="nv">orderless</span>
  <span class="nb">:defer</span> <span class="mi">3</span>
  <span class="nb">:init</span>
  <span class="c1">;; Configure a custom style dispatcher (see the Consult wiki)</span>
  <span class="c1">;; (setq orderless-style-dispatchers &#39;(+orderless-dispatch)</span>
  <span class="c1">;;       orderless-component-separator #&#39;orderless-escapable-split-on-space)</span>
  <span class="p">(</span><span class="nb">setq</span> <span class="nv">completion-styles</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">orderless</span> <span class="nv">basic</span><span class="p">)</span>
        <span class="nv">completion-category-defaults</span> <span class="no">nil</span>
        <span class="nv">completion-category-overrides</span> <span class="o">&#39;</span><span class="p">((</span><span class="nv">file</span> <span class="p">(</span><span class="nv">styles</span> <span class="nv">partial-completion</span><span class="p">)))))</span>
   
<span class="c1">;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
<span class="c1">;; ;; A few more useful configurations...</span>
<span class="p">(</span><span class="nb">use-package</span> <span class="nv">emacs</span>
  <span class="nb">:defer</span> <span class="mi">3</span>
  <span class="nb">:ensure</span> <span class="no">nil</span>
  <span class="nb">:init</span>
  <span class="c1">;; Add prompt indicator to `completing-read-multiple&#39;.</span>
  <span class="c1">;; We display [CRM&lt;separator&gt;], e.g., [CRM,] if the separator is a comma.</span>
  <span class="p">(</span><span class="nb">defun</span> <span class="nv">crm-indicator</span> <span class="p">(</span><span class="nv">args</span><span class="p">)</span>
    <span class="p">(</span><span class="nf">cons</span> <span class="p">(</span><span class="nf">format</span> <span class="s">&#34;[CRM%s] %s&#34;</span>
                  <span class="p">(</span><span class="nv">replace-regexp-in-string</span>
                   <span class="s">&#34;\\`\\[.*?]\\*\\|\\[.*?]\\*\\&#39;&#34;</span> <span class="s">&#34;&#34;</span>
                   <span class="nv">crm-separator</span><span class="p">)</span>
                  <span class="p">(</span><span class="nf">car</span> <span class="nv">args</span><span class="p">))</span>
          <span class="p">(</span><span class="nf">cdr</span> <span class="nv">args</span><span class="p">)))</span>
  <span class="p">(</span><span class="nv">advice-add</span> <span class="nf">#&#39;</span><span class="nv">completing-read-multiple</span> <span class="nb">:filter-args</span> <span class="nf">#&#39;</span><span class="nv">crm-indicator</span><span class="p">)</span>
   
  <span class="c1">;; Do not allow the cursor in the minibuffer prompt</span>
  <span class="p">(</span><span class="nb">setq</span> <span class="nv">minibuffer-prompt-properties</span>
        <span class="o">&#39;</span><span class="p">(</span><span class="nv">read-only</span> <span class="no">t</span> <span class="nv">cursor-intangible</span> <span class="no">t</span> <span class="nv">face</span> <span class="nf">minibuffer-prompt</span><span class="p">))</span>
  <span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;minibuffer-setup-hook</span> <span class="nf">#&#39;</span><span class="nv">cursor-intangible-mode</span><span class="p">)</span>
   
  <span class="c1">;; Emacs 28: Hide commands in M-x which do not work in the current mode.</span>
  <span class="c1">;; Vertico commands are hidden in normal buffers.</span>
  <span class="c1">;; (setq read-extended-command-predicate</span>
  <span class="c1">;;       #&#39;command-completion-default-include-p)</span>
   
  <span class="c1">;; Enable recursive minibuffers</span>
  <span class="p">(</span><span class="nb">setq</span> <span class="nv">enable-recursive-minibuffers</span> <span class="no">t</span><span class="p">))</span>
   
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
<!--list-separator-->
<ul>
<li>
<p>consult</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-elisp" data-lang="elisp"><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
<span class="c1">;; Search content in the file</span>
<span class="p">(</span><span class="nb">use-package</span> <span class="nv">consult</span>
  <span class="nb">:defer</span> <span class="mi">3</span>
  <span class="nb">:ensure</span> <span class="no">t</span>
  <span class="nb">:bind</span> <span class="p">(</span><span class="s">&#34;C-s&#34;</span> <span class="o">.</span> <span class="nv">consult-line</span><span class="p">)</span>
<span class="p">)</span> 
</code></pre></td></tr></table>
</div>
</div><p>安装后打开一个文件, 按 C-s 试试搜索文本 <br/></p>
</li>
</ul>
<h2 id="org-mode-重头戏">Org-mode 重头戏</h2>
]]></description>
</item><item>
    <title>Org-mode 使用 Org-protocol-capture-html 网页收集(Org-protocol 使用)</title>
    <link>http://isouthrain.github.io/2022-01-12-org-protocol-capture-html/</link>
    <pubDate>Wed, 12 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://isouthrain.github.io/2022-01-12-org-protocol-capture-html/</guid>
    <description><![CDATA[<h2 id="概述">概述</h2>
<p><strong>Notion</strong> 和 <strong>Obsidian</strong> 都有收集网页的功能, Org-mode 自然也有, Org-mode 是调用 Org-protocol 协议使用的, 而插件 <code>Org-protocol-capture-html</code> 是其中能使 <code>Org-protocol</code> 收集的网页更加美观和可视化</p>
<p>因为很多人都不会都不理解 <code>Org-protocol</code> 和怎么去使用, 以及<code>Org-protocol-capture-html</code>, 说得只是怎么用这个插件, 却没有说怎么配置, 所以才有了本教程.</p>
<h2 id="相关链接">相关链接</h2>
<ul>
<li><a href="https://github.com/alphapapa/org-protocol-capture-html" target="_blank" rel="noopener noreffer">Org-protocol-capture-html 官网</a></li>
<li><a href="https://orgmode.org/manual/Protocols.html" target="_blank" rel="noopener noreffer">Org-protocol 协议官网</a></li>
</ul>
<h3 id="效果如下">效果如下</h3>
<p><code>效果如下👇</code> 
<video poster="效果动图"  width="360" height="240" controls>
<source src="/posts/Attachment/2022-01-12-Org-protocol-capture-html/2022-01-22-14-24-59.mkv" type="video/mp4">
</video></p>
<h1 id="安装-org-protocol-capture-html">安装 Org-protocol-capture-html</h1>
<p>这个插件是不需要配置, 直接安装此插件就可以调用</p>
<p><code>请自己按装此插件</code></p>
<ul>
<li>使用 use-package 安装</li>
<li>手动安装</li>
</ul>
<h2 id="配置-org-protocol-capture-html">配置 Org-protocol-capture-html</h2>
<p>此插件是调用 <code>org-capture</code> 功能, 请自觉检查如下配置</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Elisp" data-lang="Elisp"><span class="p">(</span><span class="nv">server-start</span><span class="p">)</span>
<span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;org-protocol</span><span class="p">)</span>

<span class="p">(</span><span class="nb">use-package</span> <span class="nv">s</span><span class="p">)</span> <span class="c1">;;依赖</span>

<span class="c1">;; 安装 org-protocol-capture-html </span>
<span class="c1">;; 如果跟我的不同, 请将下面两行删除</span>
<span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">&#39;load-path</span> <span class="s">&#34;~/.emacs.d/plugins/org-protocol-capture-html/&#34;</span><span class="p">)</span> <span class="c1">;;</span>
<span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;org-protocol-capture-html</span><span class="p">)</span>

<span class="p">(</span><span class="nb">setq</span> <span class="nv">org-capture-templates</span>
      <span class="o">&#39;</span><span class="p">(</span>
	 <span class="c1">;;Org-protocol网页收集, 按键 w 调用</span>
	 <span class="p">(</span><span class="s">&#34;w&#34;</span> <span class="s">&#34;网页收集&#34;</span> <span class="nv">entry</span> <span class="p">(</span><span class="nv">file</span> <span class="s">&#34;~/Org/网页收集.org&#34;</span><span class="p">)</span>
	 <span class="s">&#34;* [[%:link][%:description]] \n %U \n %:initial \n&#34;</span><span class="p">)</span>
	<span class="p">))</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="系统安装-org-protocol">系统安装 org-protocol</h2>
<p><code>如果下面的方法无法安装, 请见官网 👇</code></p>
<ul>
<li><a href="https://orgmode.org/worg/org-contrib/org-protocol.html" target="_blank" rel="noopener noreffer">官网安装 org-protocol 教程</a></li>
</ul>
<h3 id="windows-用户">Windows 用户👇</h3>
<ul>
<li>桌面新建 <code>org-protocol.reg</code> 文件, 使用 记事本 软件打开 , 并将以下👇代码放进去并保存, 然后运行安装并给权限</li>
<li><code>请把下面的 emacsclientw.exe 路径换成你自己的路径</code></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">REGEDIT4

[HKEY_CLASSES_ROOT\org-protocol]
@=&#34;URL:Org Protocol&#34;
&#34;URL Protocol&#34;=&#34;&#34;
[HKEY_CLASSES_ROOT\org-protocol\shell]
[HKEY_CLASSES_ROOT\org-protocol\shell\open]
[HKEY_CLASSES_ROOT\org-protocol\shell\open\command]
@=&#34;\&#34;C:\\Programme\\Emacs\\emacs\\bin\\emacsclientw.exe\&#34; \&#34;%1\&#34;&#34;
</code></pre></td></tr></table>
</div>
</div><h3 id="linux-用户请见--linux-使用-org-protoclhttpskisaragi-hiucomorg-protocol-linux">Linux 用户请见 👉 <a href="https://kisaragi-hiu.com/org-protocol-linux" target="_blank" rel="noopener noreffer">Linux 使用 org-protocl</a></h3>
<h2 id="根据自己使用的浏览器添加书签">根据自己使用的浏览器添加书签</h2>
<p><code>关于 org-protocol-capture-html 对不同的 浏览书签 见</code></p>
<ul>
<li><a href="https://github.com/alphapapa/org-protocol-capture-html" target="_blank" rel="noopener noreffer">Org-protocol-capture-html 官网</a></li>
</ul>
<h3 id="例如-chrome">例如 Chrome</h3>
<h4 id="在-chrome-新建-书签">在 Chrome 新建 书签</h4>
<ol>
<li>书签名称随便取</li>
<li>书签地址如下👇</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="nx">javascript</span><span class="o">:</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="s1">&#39;org-protocol:///capture-html?template=w&amp;url=&#39;</span> <span class="o">+</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;&amp;title=&#39;</span> <span class="o">+</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">title</span> <span class="o">||</span> <span class="s2">&#34;[untitled page]&#34;</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;&amp;body=&#39;</span> <span class="o">+</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">html</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span><span class="p">;</span> <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nb">window</span><span class="p">.</span><span class="nx">getSelection</span> <span class="o">!=</span> <span class="s2">&#34;undefined&#34;</span><span class="p">)</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">sel</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">getSelection</span><span class="p">();</span> <span class="k">if</span> <span class="p">(</span><span class="nx">sel</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">)</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">container</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&#34;div&#34;</span><span class="p">);</span> <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">len</span> <span class="o">=</span> <span class="nx">sel</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">len</span><span class="p">;</span> <span class="o">++</span><span class="nx">i</span><span class="p">)</span> <span class="p">{</span><span class="nx">container</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">sel</span><span class="p">.</span><span class="nx">getRangeAt</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">cloneContents</span><span class="p">());}</span> <span class="nx">html</span> <span class="o">=</span> <span class="nx">container</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">;}}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nb">document</span><span class="p">.</span><span class="nx">selection</span> <span class="o">!=</span> <span class="s2">&#34;undefined&#34;</span><span class="p">)</span> <span class="p">{</span><span class="k">if</span> <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">type</span> <span class="o">==</span> <span class="s2">&#34;Text&#34;</span><span class="p">)</span> <span class="p">{</span><span class="nx">html</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">().</span><span class="nx">htmlText</span><span class="p">;}}</span> <span class="kd">var</span> <span class="nx">relToAbs</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">href</span><span class="p">)</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&#34;a&#34;</span><span class="p">);</span> <span class="nx">a</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="nx">href</span><span class="p">;</span> <span class="kd">var</span> <span class="nx">abs</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">protocol</span> <span class="o">+</span> <span class="s2">&#34;//&#34;</span> <span class="o">+</span> <span class="nx">a</span><span class="p">.</span><span class="nx">host</span> <span class="o">+</span> <span class="nx">a</span><span class="p">.</span><span class="nx">pathname</span> <span class="o">+</span> <span class="nx">a</span><span class="p">.</span><span class="nx">search</span> <span class="o">+</span> <span class="nx">a</span><span class="p">.</span><span class="nx">hash</span><span class="p">;</span> <span class="nx">a</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span> <span class="k">return</span> <span class="nx">abs</span><span class="p">;};</span> <span class="kd">var</span> <span class="nx">elementTypes</span> <span class="o">=</span> <span class="p">[[</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;href&#39;</span><span class="p">],</span> <span class="p">[</span><span class="s1">&#39;img&#39;</span><span class="p">,</span> <span class="s1">&#39;src&#39;</span><span class="p">]];</span> <span class="kd">var</span> <span class="nx">div</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;div&#39;</span><span class="p">);</span> <span class="nx">div</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">html</span><span class="p">;</span> <span class="nx">elementTypes</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">elementType</span><span class="p">)</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">elements</span> <span class="o">=</span> <span class="nx">div</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">elementType</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span> <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">elements</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span><span class="nx">elements</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">elementType</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="nx">relToAbs</span><span class="p">(</span><span class="nx">elements</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">elementType</span><span class="p">[</span><span class="mi">1</span><span class="p">])));}});</span> <span class="k">return</span> <span class="nx">div</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">;}());</span>

<span class="nx">javascript</span><span class="o">:</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="s1">&#39;org-protocol:///capture-eww-readable?template=w&amp;url=&#39;</span> <span class="o">+</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;&amp;title=&#39;</span> <span class="o">+</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">title</span> <span class="o">||</span> <span class="s2">&#34;[untitled page]&#34;</span><span class="p">);</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="firefox-如下">Firefox 如下</h3>
<h4 id="在-firefox-新建-书签">在 Firefox 新建 书签</h4>
<ol>
<li>书签名称随便取</li>
<li>书签地址如下👇</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="nx">javascript</span><span class="o">:</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="s1">&#39;org-protocol://capture-html?template=w&amp;url=&#39;</span> <span class="o">+</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;&amp;title=&#39;</span> <span class="o">+</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">title</span> <span class="o">||</span> <span class="s2">&#34;[untitled page]&#34;</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;&amp;body=&#39;</span> <span class="o">+</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">html</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span><span class="p">;</span> <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getSelection</span> <span class="o">!=</span> <span class="s2">&#34;undefined&#34;</span><span class="p">)</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">sel</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getSelection</span><span class="p">();</span> <span class="k">if</span> <span class="p">(</span><span class="nx">sel</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">)</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">container</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&#34;div&#34;</span><span class="p">);</span> <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">len</span> <span class="o">=</span> <span class="nx">sel</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">len</span><span class="p">;</span> <span class="o">++</span><span class="nx">i</span><span class="p">)</span> <span class="p">{</span><span class="nx">container</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">sel</span><span class="p">.</span><span class="nx">getRangeAt</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">cloneContents</span><span class="p">());}</span> <span class="nx">html</span> <span class="o">=</span> <span class="nx">container</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">;}}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nb">document</span><span class="p">.</span><span class="nx">selection</span> <span class="o">!=</span> <span class="s2">&#34;undefined&#34;</span><span class="p">)</span> <span class="p">{</span><span class="k">if</span> <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">type</span> <span class="o">==</span> <span class="s2">&#34;Text&#34;</span><span class="p">)</span> <span class="p">{</span><span class="nx">html</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">().</span><span class="nx">htmlText</span><span class="p">;}}</span> <span class="kd">var</span> <span class="nx">relToAbs</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">href</span><span class="p">)</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&#34;a&#34;</span><span class="p">);</span> <span class="nx">a</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="nx">href</span><span class="p">;</span> <span class="kd">var</span> <span class="nx">abs</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">protocol</span> <span class="o">+</span> <span class="s2">&#34;//&#34;</span> <span class="o">+</span> <span class="nx">a</span><span class="p">.</span><span class="nx">host</span> <span class="o">+</span> <span class="nx">a</span><span class="p">.</span><span class="nx">pathname</span> <span class="o">+</span> <span class="nx">a</span><span class="p">.</span><span class="nx">search</span> <span class="o">+</span> <span class="nx">a</span><span class="p">.</span><span class="nx">hash</span><span class="p">;</span> <span class="nx">a</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span> <span class="k">return</span> <span class="nx">abs</span><span class="p">;};</span> <span class="kd">var</span> <span class="nx">elementTypes</span> <span class="o">=</span> <span class="p">[[</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;href&#39;</span><span class="p">],</span> <span class="p">[</span><span class="s1">&#39;img&#39;</span><span class="p">,</span> <span class="s1">&#39;src&#39;</span><span class="p">]];</span> <span class="kd">var</span> <span class="nx">div</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;div&#39;</span><span class="p">);</span> <span class="nx">div</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">html</span><span class="p">;</span> <span class="nx">elementTypes</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">elementType</span><span class="p">)</span> <span class="p">{</span><span class="kd">var</span> <span class="nx">elements</span> <span class="o">=</span> <span class="nx">div</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">elementType</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span> <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">elements</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span><span class="nx">elements</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">elementType</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="nx">relToAbs</span><span class="p">(</span><span class="nx">elements</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">elementType</span><span class="p">[</span><span class="mi">1</span><span class="p">])));}});</span> <span class="k">return</span> <span class="nx">div</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">;}());</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="享受使用-">享受使用 👇</h2>
<h3 id="使用之前">使用之前</h3>
<p><code>请把你的 Chrome 或者 Firefox 的 书签 始终可见(比如在你浏览网页选中文字时可以点击你的书签)</code></p>
<h3 id="开始使用">开始使用</h3>
<ol>
<li>打开 Emacs</li>
<li>使用浏览器浏览网页</li>
<li>在网页 <code>选择你想收集的文本</code></li>
<li>点击你刚才新建的书签, 点击确定授权之类的</li>
<li>回到 Emacs 你会看到你已经收集到的 Capture</li>
<li>自己记得保存</li>
<li>你收集到的会 保存到 <code>~/Org/网页收集.org</code> 文件中</li>
</ol>
<h2 id="如果你有更多的需求-请自己学习-因为网上并没有详细的教程使用-org-protocol-所以才有了本教程">如果你有更多的需求, 请自己学习, 因为网上并没有详细的教程使用 org-protocol 所以才有了本教程</h2>
<p><code>祝你使用愉快🤓⚡👉♥️🌹</code></p>
]]></description>
</item><item>
    <title>Vim和Emacs的选择</title>
    <link>http://isouthrain.github.io/2021-12-27-vim%E5%92%8Cemacs%E7%9A%84%E9%80%89%E6%8B%A9/</link>
    <pubDate>Mon, 27 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://isouthrain.github.io/2021-12-27-vim%E5%92%8Cemacs%E7%9A%84%E9%80%89%E6%8B%A9/</guid>
    <description><![CDATA[<h1 id="前言">前言</h1>
<p><strong>这篇文章并不是想引战, 而是试着去说明这两者的区别, 然后根据自己的需求选择 Vim 还是 Emacs</strong><br>
<strong>Vin 和 Emacs 各有自己的特点, 我只想把这两者的特点说明以下, 让读者根据自己的需求选择 Vim 还是 Emacs</strong></p>
<h2 id="编辑习惯">编辑习惯</h2>
<ol>
<li>
<p>Vim 在于<strong>按键的组合</strong>,比如你可以配置任何按键组合去触发某些动作,(e.g 你可以在 I 模式 配置 jk 去触发按键 <ESC> 进入 N 模式,然后相当于你没有输入过 jk), 这只是一个例子,反正你能做到全部Vim 能做的,甚至调用插件以及命令.</p>
</li>
<li>
<p>Emacs 做不到上面例子,Emacs 是靠函数触发的或者说你必须 Ctrl+才能实现某些功能(类似Vim 的例子), Emacs 就是一个 Elisp 语言的运行器, 你做的每一个动作都是在触发某个函数(e.g Ctrl+n 触发 next-line 函数将光标移动到下一行)</p>
</li>
<li>
<p>在这一点上显然是 Vim 更方便,因为按键组合真的非常好用,还不影响输入,对于 Emacs 就必须用两个按键同时按下, 这非常麻烦, 所以在按键组合中 <strong>Vim</strong> 有着非常好的优势, 因为 <strong>Emacs</strong> 要按 <strong>Ctrl</strong> 键, 左边小拇指真的难受, 不过 <strong>Emacs</strong> 也有模拟 <strong>Vim</strong> 的插件, 但仅仅是只能模拟控制光标和一些命令, 做不到可以设置按键组合触发某些功能!</p>
</li>
</ol>
<h2 id="vim-和-emacs-设置理念">Vim 和 Emacs 设置理念</h2>
<ol>
<li>
<p>Vim 类似一把短刀, 只做好一件事, 他仅仅是一个编辑器</p>
</li>
<li>
<p>Emacs 类似一个武器库, 可以做非常多的事, 但都不精, Emacs 有时候被人说做是一个 <strong>编辑器系统</strong> 我个人感觉还是挺符合的</p>
</li>
<li>
<p>总之 Emacs 比 Vim 做的事多得多, Emacs 是可以查看图片的, 而且现在 Emacs 已经发展到通过插件可以在Emacs进行网页浏览和播放视频了 [类似 Chrome 那种浏览器 ] (e.g EAF 框架)</p>
</li>
</ol>
<h2 id="emacs-的个人笔记管理">Emacs 的个人笔记管理</h2>
<ol>
<li>
<p>如果你有写笔记的习惯, 那么你一定听说过 Markdown 的语法, <strong>我要说的不是Markdown</strong> 而是Emacs内置的一个笔记系统 Org-mode.</p>
</li>
<li>
<p>Org-mode 只有在 Emacs 有着非常好的体验, 而在其它编辑软件基本无法发挥 org-mode 的强大</p>
</li>
<li>
<p>Org-mode 的表格可以运算, 代码块可以直接进行运行并返回结果, 捕获(Capture)功能, GTD管理系统(比如 日程安排(可以重复提醒), TODO, 计时器, 导出为其它格式)</p>
</li>
<li>
<p>所以说, 如果你打算使用 Emacs 真的非常多优点, org-mode 有点难学习(和设置), 因为使用 org 之前你的会 Emacs 以及 ELisp语言基础</p>
</li>
</ol>
<h2 id="如何选择-vim-和-emacs-">如何选择 Vim 和 Emacs ?</h2>
<p><strong>如果你需要很多的功能, 建议你选择 Emacs , 因为 Emacs 是可发展的, 以及可以运行图形界面, 使 GUI 功能 在Emacs成为了可能</strong></p>
<p><strong>Vim 只能查看文本之类的, 图片这些无法处理, 只能通过调用第三方应用才能处理查看</strong>
<strong>如果你非常需要 GTD 系统之类的, 那么 Emacs 是不二智选, 如果 你只是需要出来文本的,那么Vim更好</strong></p>
<p><strong>Emacs 如果你使用的非常好, 非常6, 那么你将非常牛逼, 而且我估计你未来时不会再更换编辑器了</strong></p>
<p>我个人是 Vim &mdash;&gt; Emacs &mdash;&gt; Vim 还是回到了 Vim</p>
]]></description>
</item><item>
    <title>Notion,Obsidian,Org-mode,Logseq,RoamResearch,笔记软件的选择</title>
    <link>http://isouthrain.github.io/2021-12-25-%E7%AC%94%E8%AE%B0%E8%BD%AF%E4%BB%B6%E7%9A%84%E9%80%89%E6%8B%A9/</link>
    <pubDate>Sat, 25 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://isouthrain.github.io/2021-12-25-%E7%AC%94%E8%AE%B0%E8%BD%AF%E4%BB%B6%E7%9A%84%E9%80%89%E6%8B%A9/</guid>
    <description><![CDATA[<h1 id="概述">概述</h1>
<p><strong>在如今这个时代每个人都需要做笔记，用来记录一些生活琐事，以及一些重要的事情，避免忘记， <em>好记性不如烂笔头</em></strong><br>
<strong>那么用什么软件记笔记呢?一个好的笔记软件可以快速让笔记快速记录。</strong><br>
<strong>笔记软件目前最好用的无非就是那几个，比如:</strong></p>
<ul>
<li><em>Notion</em></li>
<li><em>Obsidian</em></li>
<li><em>Logseq</em></li>
<li><em>Emacs Org-mode</em></li>
<li><em>RoamResearch</em></li>
</ul>
<p><strong>每个笔记都有自己的优缺点，看自己的选择，上面这几款除了 RoamResearch 没用过，其他的我都有用过，所以在此讨论下。</strong></p>
<p><strong>仅代表个人观点，仅供参考，无实际意义</strong></p>
<h2 id="notion">Notion</h2>
<h3 id="notion-优点">Notion 优点</h3>
<ul>
<li>免费</li>
<li>无限Page</li>
<li>大量的模板提供使用</li>
<li>非常的灵活</li>
<li>列表database的使用(e.g. 类似 Excel 的列表，可以自动进行运算)</li>
<li>全平台支持(主要是Web，Window，MacOS，Liux，Android，IOS)</li>
<li>Task 使用</li>
<li>日程的安排(有日历，并进行提醒)</li>
<li>每一行都是一个块(非常方便)</li>
<li>可以进行简单的GTD管理</li>
<li>支持Markdown语法</li>
<li>所见既所得</li>
<li>能导出(Markdown,PDF,CSV)</li>
<li>纯文本</li>
</ul>
<h3 id="notion-缺点">Notion 缺点</h3>
<ul>
<li>都是需要联网的，没有离线版(可以离线使用，联网后自动同步，但是上传图片不行)</li>
<li>数据都是保存在Notion官方里</li>
<li>导出功能对中文不友好(中文路径乱码)</li>
</ul>
<h3 id="对于-notion-个人建议">对于 Notion 个人建议</h3>
<p><strong>如果你需要 多人协同工作 和 列表数据的计算，Notion 将会很适合你</strong></p>
<p><strong>如果你需要把资料掌握在手了，而且是记录一些永久数据，不建议使用</strong></p>
<p>这些公司不知道什么时候倒闭，如果你把一些永久保存的资料放上去很不好，导出的时候就很难受了</p>
<p><strong>不过 Notion 至少可以熬10年，实在是Notion太棒了, 功能强大，界面美观，非常丝滑，令人一上手就不舍得离开，请谨慎使用</strong></p>
<h2 id="obsidian">Obsidian</h2>
<h3 id="obsidian-优点">Obsidian 优点</h3>
<ul>
<li>免费</li>
<li>全平台支持(Window，MacOS，Liux，Android，IOS)</li>
<li>本地存储(也可以使用官方提供的在线存储)</li>
<li>支持Markdown语法</li>
<li>所见即所得(Mobile 端目前没有实现，将来可能实现)</li>
<li>丰富的<strong>插件生态</strong></li>
<li>笔记双链</li>
<li>可以配合插件进行<strong>绘图</strong></li>
<li>Git进行版本管理(插件提供)</li>
<li>模板捕获</li>
<li>配置可迁移，复制配置目录就可以在全平台使用</li>
</ul>
<h3 id="obsidian-缺点">Obsidian 缺点</h3>
<ul>
<li>没有像Notion那样的database使用</li>
<li>表格的编辑要安装插件才勉强好用</li>
<li>无法进行GTD使用</li>
<li>要安装一些插件才能使<strong>Obsidian</strong>更好用</li>
</ul>
<h3 id="对于-obsidian-个人建议">对于 Obsidian 个人建议</h3>
<p><strong>个人目前</strong>使用的是<strong>Obsidian</strong>，因为配合插件的使用真的非常好用，而且可以掌控自己的数据，想保存在那就保存在哪。</p>
<ul>
<li>如果你需要自己掌控数据的话这款我觉得是最好的，虽然少了database的使用，但大量的插件可能以后会有人做出来</li>
<li>如果你经常需要<strong>捕获</strong>某个想法的话这个挺好的</li>
<li>缺点的话就是没有database了，自己看自己需求吧</li>
</ul>
<h3 id="以下是我个人在obsidian使用的插件">以下是我个人在Obsidian使用的插件</h3>
<ul>
<li>Calender  &mdash; 类似日历，点击日历的某天会创建当天的笔记(笔记名是当天的日期)</li>
<li>Advance Table &mdash; 表格的快速编辑</li>
<li>Dataview &mdash; 这个挺好的，类似一个数据库，可以根据自己的筛选所有文件和想要的记录</li>
<li>Excaldram &mdash; 绘图插件</li>
<li>Mind Map &mdash; 类似思维导图，自动把当前笔记形成思维导图观看</li>
<li>Kanban &mdash; 就是看板</li>
<li>Remember cursor position &mdash; 记录你查看笔记的位置</li>
<li>Templater &mdash; 模板的捕获，这个需要自己的配置</li>
<li>Dayplany &mdash; 查看自己的任务时间线</li>
</ul>
<h2 id="emacs-org-mode">Emacs Org-mode</h2>
<p><strong>大名鼎鼎的Emacs，Org-mode是真的非常强大，Org-mode类似Markdown也是一种语法，Org-mode可以做GTD管理个人的任务</strong><br>
<strong>Org-mode的强大是背靠Emacs的生态，缺点也因为是背靠Emacs难以在其他地方很好的使用</strong><br>
<strong>如果你喜欢折腾，那么Org-mode真的是非常好的，不过学习Org-mode之前你就要会简单使用Emacs</strong><br>
<em><strong>如果你是普通人，可以忽略Org-mode，因为Org-mode是真的难以熟练，因为你要配置Emacs和Org-mode的插件，并且org-mode只有在Emacs有比较好的体验，当然如果你真的会了你就会看不上其他的了。其他笔记能做的，Org-mode也能做，其他笔记不能做的，Org-mode也能做</strong></em></p>
<h3 id="org-mode-优点">Org-mode 优点</h3>
<ul>
<li>全平台支持(Window，MacOS，Liux，没有Android，IOS。Android可以在Termux使用)</li>
<li>GTD管理(日程，Tasks) &mdash; 这方面真的很强很强很强</li>
<li>表格可以自己使用算法进行计算</li>
<li>文本编程(可以直接执行代码并返回结果)</li>
<li>纯文本</li>
<li>丰富的生态插件</li>
<li>双链(插件 Org-Roam 提供)</li>
<li>不会落伍，因为Emacs是可扩展的，像<strong>双链</strong>一样Org-mode是没有双链的，是由开源社区的人开发的插件补上的</li>
<li>加密文本</li>
<li>捕获模板(可能是在笔记软件中功能最强大和功能最全得了)</li>
<li>导出功能好(PDF,html,Latx,Markdown)</li>
</ul>
<h3 id="org-mode-缺点">Org-mode 缺点</h3>
<ul>
<li>移动端没有好的体验</li>
<li>只在Emacs有好的体验</li>
</ul>
<h3 id="对于emacs-org-mode-个人建议">对于Emacs Org-mode 个人建议</h3>
<p><em><strong>如果你需要在移动端使用就不建议了，电脑的会是非常好的体验</strong></em><br>
<strong>但是将来会不会完美的迁移到移动端不好说</strong> <br>
<em><strong>强大的人会非常适合，会收益终身的，因为你以后不会再找其他笔记软件了</strong></em></p>
<h2 id="logseq">Logseq</h2>
<h3 id="logseq-优点">Logseq 优点</h3>
<ul>
<li>支持Org-mode，Markdown语法</li>
<li>Windows，MacOS，Linux</li>
<li>移动端(正在开发)</li>
<li>双链</li>
</ul>
<h3 id="对于-logseq-个人建议">对于 Logseq 个人建议</h3>
<p><em><strong>由于个人并没有深入使用，不过多评价，不过看见很多人都说好，估计是不错的，因为Logseq和Notion，Obsidian，Emacs可以相互对比的</strong></em></p>
<h2 id="roamresearch">RoamResearch</h2>
<p><strong>最近非常热门，本人没有使用过，因为付费的，听说双链之类的做的很好，可以使用一下</strong></p>
<h1 id="总结">总结</h1>
<p><strong>希望大家根据自己的需求选择，本人只是给出一些功能参考</strong></p>
]]></description>
</item></channel>
</rss>
